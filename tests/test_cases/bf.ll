; ModuleID = 'bf.c'
source_filename = "bf.c"
target datalayout = "e-m:o-p:32:32-f64:32:64-f80:128-n8:16:32-S128"
target triple = "i386-apple-macosx10.13.0"

@bf_init_P = constant [18 x i32] [i32 608135816, i32 -2052912941, i32 320440878, i32 57701188, i32 -1542899678, i32 698298832, i32 137296536, i32 -330404727, i32 1160258022, i32 953160567, i32 -1101764913, i32 887688300, i32 -1062458953, i32 -914599715, i32 1065670069, i32 -1253635817, i32 -1843997223, i32 -1988494565], align 4
@bf_init_S = constant [1024 x i32] [i32 -785314906, i32 -1730169428, i32 805139163, i32 -803545161, i32 -1193168915, i32 1780907670, i32 -1166241723, i32 -248741991, i32 614570311, i32 -1282315017, i32 134345442, i32 -2054226922, i32 1667834072, i32 1901547113, i32 -1537671517, i32 -191677058, i32 227898511, i32 1921955416, i32 1904987480, i32 -2112533778, i32 2069144605, i32 -1034266187, i32 -1674521287, i32 720527379, i32 -976113629, i32 677414384, i32 -901678824, i32 -1193592593, i32 -1904616272, i32 1614419982, i32 1822297739, i32 -1340175810, i32 -686458943, i32 -1120842969, i32 2024746970, i32 1432378464, i32 -430627341, i32 -1437226092, i32 1464375394, i32 1676153920, i32 1439316330, i32 715854006, i32 -1261675468, i32 289532110, i32 -1588296017, i32 2087905683, i32 -1276242927, i32 1668267050, i32 732546397, i32 1947742710, i32 -832815594, i32 -1685613794, i32 -1344882125, i32 1814351708, i32 2050118529, i32 680887927, i32 999245976, i32 1800124847, i32 -994056165, i32 1713906067, i32 1641548236, i32 -81679983, i32 1216130144, i32 1575780402, i32 -276538019, i32 -377129551, i32 -601480446, i32 -345695352, i32 596196993, i32 -745100091, i32 258830323, i32 -2081144263, i32 772490370, i32 -1534844924, i32 1774776394, i32 -1642095778, i32 566650946, i32 -152474470, i32 1728879713, i32 -1412200208, i32 1783734482, i32 -665571480, i32 -1777359064, i32 -1420741725, i32 1861159788, i32 326777828, i32 -1170476976, i32 2130389656, i32 -1578015459, i32 967770486, i32 1724537150, i32 -2109534584, i32 -1930525159, i32 1164943284, i32 2105845187, i32 998989502, i32 -529566248, i32 -2050940813, i32 1075463327, i32 1455516326, i32 1322494562, i32 910128902, i32 469688178, i32 1117454909, i32 936433444, i32 -804646328, i32 -619713837, i32 1240580251, i32 122909385, i32 -2137449605, i32 634681816, i32 -152510729, i32 -469872614, i32 -1233564613, i32 -1754472259, i32 79693498, i32 -1045868618, i32 1084186820, i32 1583128258, i32 426386531, i32 1761308591, i32 1047286709, i32 322548459, i32 995290223, i32 1845252383, i32 -1691314900, i32 -863943356, i32 -1352745719, i32 -1092366332, i32 -567063811, i32 1712269319, i32 422464435, i32 -1060394921, i32 1170764815, i32 -771006663, i32 -1177289765, i32 1434042557, i32 442511882, i32 -694091578, i32 1076654713, i32 1738483198, i32 -81812532, i32 -1901729288, i32 -617471240, i32 1014306527, i32 -43947243, i32 793779912, i32 -1392160085, i32 842905082, i32 -48003232, i32 1395751752, i32 1040244610, i32 -1638115397, i32 -898659168, i32 445077038, i32 -552113701, i32 -717051658, i32 679411651, i32 -1402522938, i32 -1940957837, i32 1767581616, i32 -1144366904, i32 -503340195, i32 -1192226400, i32 284835224, i32 -48135240, i32 1258075500, i32 768725851, i32 -1705778055, i32 -1225243291, i32 -762426948, i32 1274779536, i32 -505548070, i32 -1530167757, i32 1660621633, i32 -823867672, i32 -283063590, i32 913787905, i32 -797008130, i32 737222580, i32 -1780753843, i32 -1366257256, i32 -357724559, i32 1804850592, i32 -795946544, i32 -1345903136, i32 -1908647121, i32 -1904896841, i32 -1879645445, i32 -233690268, i32 -2004305902, i32 -1878134756, i32 1336762016, i32 1754252060, i32 -774901359, i32 -1280786003, i32 791618072, i32 -1106372745, i32 -361419266, i32 -1962795103, i32 -442446833, i32 -1250986776, i32 413987798, i32 -829824359, i32 -1264037920, i32 -49028937, i32 2093235073, i32 -760370983, i32 375366246, i32 -2137688315, i32 -1815317740, i32 555357303, i32 -424861595, i32 2008414854, i32 -950779147, i32 -73583153, i32 -338841844, i32 2067696032, i32 -700376109, i32 -1373733303, i32 2428461, i32 544322398, i32 577241275, i32 1471733935, i32 610547355, i32 -267798242, i32 1432588573, i32 1507829418, i32 2025931657, i32 -648391809, i32 545086370, i32 48609733, i32 -2094660746, i32 1653985193, i32 298326376, i32 1316178497, i32 -1287180854, i32 2064951626, i32 458293330, i32 -1705826027, i32 -703637697, i32 -1130641692, i32 727753846, i32 -2115603456, i32 146436021, i32 1461446943, i32 -224990101, i32 705550613, i32 -1235000031, i32 -407242314, i32 -13368018, i32 -981117340, i32 1404054877, i32 -1449160799, i32 146425753, i32 1854211946, i32 1266315497, i32 -1246549692, i32 -613086930, i32 -1004984797, i32 -1385257296, i32 1235738493, i32 -1662099272, i32 -1880247706, i32 -324367247, i32 1771706367, i32 1449415276, i32 -1028546847, i32 422970021, i32 1963543593, i32 -1604775104, i32 -468174274, i32 1062508698, i32 1531092325, i32 1804592342, i32 -1711849514, i32 -1580033017, i32 -269995787, i32 1294809318, i32 -265986623, i32 1289560198, i32 -2072974554, i32 1669523910, i32 35572830, i32 157838143, i32 1052438473, i32 1016535060, i32 1802137761, i32 1753167236, i32 1386275462, i32 -1214491899, i32 -1437595849, i32 1040679964, i32 2145300060, i32 -1904392980, i32 1461121720, i32 -1338320329, i32 -263189491, i32 -266592508, i32 33600511, i32 -1374882534, i32 1018524850, i32 629373528, i32 -603381315, i32 -779021319, i32 2091462646, i32 -1808644237, i32 586499841, i32 988145025, i32 935516892, i32 -927631820, i32 -1695294041, i32 -1455136442, i32 265290510, i32 -322386114, i32 -1535828415, i32 -499593831, i32 1005194799, i32 847297441, i32 406762289, i32 1314163512, i32 1332590856, i32 1866599683, i32 -167115585, i32 750260880, i32 613907577, i32 1450815602, i32 -1129346641, i32 -560302305, i32 -644675568, i32 -1282691566, i32 -590397650, i32 1427272223, i32 778793252, i32 1343938022, i32 -1618686585, i32 2052605720, i32 1946737175, i32 -1130390852, i32 -380928628, i32 -327488454, i32 -612033030, i32 1661551462, i32 -1000029230, i32 -283371449, i32 840292616, i32 -582796489, i32 616741398, i32 312560963, i32 711312465, i32 1351876610, i32 322626781, i32 1910503582, i32 271666773, i32 -2119403562, i32 1594956187, i32 70604529, i32 -677132437, i32 1007753275, i32 1495573769, i32 -225450259, i32 -1745748998, i32 -1631928532, i32 504708206, i32 -2031925904, i32 -353800271, i32 -2045878774, i32 1514023603, i32 1998579484, i32 1312622330, i32 694541497, i32 -1712906993, i32 -2143385130, i32 1382467621, i32 776784248, i32 -1676627094, i32 -971698502, i32 -1797068168, i32 -1510196141, i32 503983604, i32 -218673497, i32 907881277, i32 423175695, i32 432175456, i32 1378068232, i32 -149744970, i32 -340918674, i32 -356311194, i32 -474200683, i32 -1501837181, i32 -1317062703, i32 26017576, i32 -1020076561, i32 -1100195163, i32 1700274565, i32 1756076034, i32 -288447217, i32 -617638597, i32 720338349, i32 1533947780, i32 354530856, i32 688349552, i32 -321042571, i32 1637815568, i32 332179504, i32 -345916010, i32 53804574, i32 -1442618417, i32 -1250730864, i32 1282449977, i32 -711025141, i32 -877994476, i32 -288586052, i32 1617046695, i32 -1666491221, i32 -1292663698, i32 1686838959, i32 431878346, i32 -1608291911, i32 1700445008, i32 1080580658, i32 1009431731, i32 832498133, i32 -1071531785, i32 -1688990951, i32 -2023776103, i32 -1778935426, i32 1648197032, i32 -130578278, i32 -1746719369, i32 300782431, i32 375919233, i32 238389289, i32 -941219882, i32 -1763778655, i32 2019080857, i32 1475708069, i32 455242339, i32 -1685863425, i32 448939670, i32 -843904277, i32 1395535956, i32 -1881585436, i32 1841049896, i32 1491858159, i32 885456874, i32 -30872223, i32 -293847949, i32 1565136089, i32 -396052509, i32 1108368660, i32 540939232, i32 1173283510, i32 -1549095958, i32 -613658859, i32 -87339056, i32 -951913406, i32 -278217803, i32 1699691293, i32 1103962373, i32 -669091426, i32 -2038084153, i32 -464828566, i32 1031889488, i32 -815619598, i32 1535977030, i32 -58162272, i32 -1043876189, i32 2132092099, i32 1774941330, i32 1199868427, i32 1452454533, i32 157007616, i32 -1390851939, i32 342012276, i32 595725824, i32 1480756522, i32 206960106, i32 497939518, i32 591360097, i32 863170706, i32 -1919713727, i32 -698356495, i32 1814182875, i32 2094937945, i32 -873565088, i32 1082520231, i32 -831049106, i32 -1509457788, i32 435703966, i32 -386934699, i32 1641649973, i32 -1452693590, i32 -989067582, i32 1510255612, i32 -2146710820, i32 -1639679442, i32 -1018874748, i32 -36346107, i32 236887753, i32 -613164077, i32 274041037, i32 1734335097, i32 -479771840, i32 -976997275, i32 1899903192, i32 1026095262, i32 -244449504, i32 356393447, i32 -1884275382, i32 -421290197, i32 -612127241, i32 -381855128, i32 -1803468553, i32 -162781668, i32 -1805047500, i32 1091903735, i32 1979897079, i32 -1124832466, i32 -727580568, i32 -737663887, i32 857797738, i32 1136121015, i32 1342202287, i32 507115054, i32 -1759230650, i32 337727348, i32 -1081374656, i32 1301675037, i32 -1766485585, i32 1895095763, i32 1721773893, i32 -1078195732, i32 62756741, i32 2142006736, i32 835421444, i32 -1762973773, i32 1442658625, i32 -635090970, i32 -1412822374, i32 676362277, i32 1392781812, i32 170690266, i32 -373920261, i32 1759253602, i32 -683120384, i32 1745797284, i32 664899054, i32 1329594018, i32 -393761396, i32 -1249058810, i32 2062866102, i32 -1429332356, i32 -751345684, i32 -830954599, i32 1080764994, i32 553557557, i32 -638351943, i32 -298199125, i32 991055499, i32 499776247, i32 1265440854, i32 648242737, i32 -354183246, i32 980351604, i32 -581221582, i32 1749149687, i32 -898096901, i32 -83167922, i32 -654396521, i32 1161844396, i32 -1169648345, i32 1431517754, i32 545492359, i32 -26498633, i32 -795437749, i32 1437099964, i32 -1592419752, i32 -861329053, i32 -1713251533, i32 -1507177898, i32 1060185593, i32 1593081372, i32 -1876348548, i32 -34019326, i32 69676912, i32 -2135222948, i32 86519011, i32 -1782508216, i32 -456757982, i32 1220612927, i32 -955283748, i32 133810670, i32 1090789135, i32 1078426020, i32 1569222167, i32 845107691, i32 -711212847, i32 -222510705, i32 1091646820, i32 628848692, i32 1613405280, i32 -537335645, i32 526609435, i32 236106946, i32 48312990, i32 -1352249391, i32 -892239595, i32 1797494240, i32 859738849, i32 992217954, i32 -289490654, i32 -2051890674, i32 -424014439, i32 -562951028, i32 765654824, i32 -804095931, i32 -1783130883, i32 1685915746, i32 -405998096, i32 1414112111, i32 -2021832454, i32 -1013056217, i32 -214004450, i32 172450625, i32 -1724973196, i32 980381355, i32 -185008841, i32 -1475158944, i32 -1578377736, i32 -1726226100, i32 -613520627, i32 -964995824, i32 1835478071, i32 660984891, i32 -590288892, i32 -248967737, i32 -872349789, i32 -1254551662, i32 1762651403, i32 1719377915, i32 -824476260, i32 -1601057013, i32 -652910941, i32 -1156370552, i32 1364962596, i32 2073328063, i32 1983633131, i32 926494387, i32 -871278215, i32 -2144935273, i32 -198299347, i32 1749200295, i32 -966120645, i32 309677260, i32 2016342300, i32 1779581495, i32 -1215147545, i32 111262694, i32 1274766160, i32 443224088, i32 298511866, i32 1025883608, i32 -488520759, i32 1145181785, i32 168956806, i32 -653464466, i32 -710153686, i32 1689216846, i32 -628709281, i32 -1094719096, i32 1692713982, i32 -1648590761, i32 -252198778, i32 1618508792, i32 1610833997, i32 -771914938, i32 -164094032, i32 2001055236, i32 -684262196, i32 -2092799181, i32 -266425487, i32 -1333771897, i32 1006657119, i32 2006996926, i32 -1108824540, i32 1430667929, i32 -1084739999, i32 1314452623, i32 -220332638, i32 -193663176, i32 -2021016126, i32 1399257539, i32 -927756684, i32 -1267338667, i32 1190975929, i32 2062231137, i32 -1960976508, i32 -2073424263, i32 -1856006686, i32 1181637006, i32 548689776, i32 -1932175983, i32 -922558900, i32 -1190417183, i32 -1149106736, i32 296247880, i32 1970579870, i32 -1216407114, i32 -525738999, i32 1714227617, i32 -1003338189, i32 -396747006, i32 166772364, i32 1251581989, i32 493813264, i32 448347421, i32 195405023, i32 -1584991729, i32 677966185, i32 -591930749, i32 1463355134, i32 -1578971493, i32 1338867538, i32 1343315457, i32 -1492745222, i32 -1610435132, i32 233230375, i32 -1694987225, i32 2000651841, i32 -1017099258, i32 1638401717, i32 -266896856, i32 -1057650976, i32 6314154, i32 819756386, i32 300326615, i32 590932579, i32 1405279636, i32 -1027467724, i32 -1144263082, i32 -1866680610, i32 -335774303, i32 -833020554, i32 1862657033, i32 1266418056, i32 963775037, i32 2089974820, i32 -2031914401, i32 1917689273, i32 448879540, i32 -744572676, i32 -313240200, i32 150775221, i32 -667058989, i32 1303187396, i32 508620638, i32 -1318983944, i32 -1568336679, i32 1817252668, i32 1876281319, i32 1457606340, i32 908771278, i32 -574175177, i32 -677760460, i32 -1838972398, i32 1729034894, i32 1080033504, i32 976866871, i32 -738527793, i32 -1413318857, i32 1522871579, i32 1555064734, i32 1336096578, i32 -746444992, i32 -1715692610, i32 -720269667, i32 -1089506539, i32 -701686658, i32 -956251013, i32 -1215554709, i32 564236357, i32 -1301368386, i32 1781952180, i32 1464380207, i32 -1131123079, i32 -962365742, i32 1699332808, i32 1393555694, i32 1183702653, i32 -713881059, i32 1288719814, i32 691649499, i32 -1447410096, i32 -1399511320, i32 -1101077756, i32 -1577396752, i32 1781354906, i32 1676643554, i32 -1702433246, i32 -1064713544, i32 1126444790, i32 -1524759638, i32 -1661808476, i32 -2084544070, i32 -1679201715, i32 -1880812208, i32 -1167828010, i32 673620729, i32 -1489356063, i32 1269405062, i32 -279616791, i32 -953159725, i32 -145557542, i32 1057255273, i32 2012875353, i32 -2132498155, i32 -2018474495, i32 -1693849939, i32 993977747, i32 -376373926, i32 -1640704105, i32 753973209, i32 36408145, i32 -1764381638, i32 25011837, i32 -774947114, i32 2088578344, i32 530523599, i32 -1376601957, i32 1524020338, i32 1518925132, i32 -534139791, i32 -535190042, i32 1202760957, i32 -309069157, i32 -388774771, i32 674977740, i32 -120232407, i32 2031300136, i32 2019492241, i32 -311074731, i32 -141160892, i32 -472686964, i32 352677332, i32 -1997247046, i32 60907813, i32 90501309, i32 -1007968747, i32 1016092578, i32 -1759044884, i32 -1455814870, i32 457141659, i32 509813237, i32 -174299397, i32 652014361, i32 1966332200, i32 -1319764491, i32 55981186, i32 -1967506245, i32 676427537, i32 -1039476232, i32 -1412673177, i32 -861040033, i32 1307055953, i32 942726286, i32 933058658, i32 -1826555503, i32 -361066302, i32 -79791154, i32 1361170020, i32 2001714738, i32 -1464409218, i32 -1020707514, i32 1222529897, i32 1679025792, i32 -1565652976, i32 -580013532, i32 1770335741, i32 151462246, i32 -1281735158, i32 1682292957, i32 1483529935, i32 471910574, i32 1539241949, i32 458788160, i32 -858652289, i32 1807016891, i32 -576558466, i32 978976581, i32 1043663428, i32 -1129001515, i32 1927990952, i32 -94075717, i32 -1922690386, i32 -1086558393, i32 -761535389, i32 1412390302, i32 -1362987237, i32 -162634896, i32 1947078029, i32 -413461673, i32 -126740879, i32 -1353482915, i32 1077988104, i32 1320477388, i32 886195818, i32 18198404, i32 -508558296, i32 -1785185763, i32 112762804, i32 -831610808, i32 1866414978, i32 891333506, i32 18488651, i32 661792760, i32 1628790961, i32 -409780260, i32 -1153795797, i32 876946877, i32 -1601685023, i32 1372485963, i32 791857591, i32 -1608533303, i32 -534984578, i32 -1127755274, i32 -822013501, i32 -1578587449, i32 445679433, i32 -732971622, i32 -790962485, i32 -720709064, i32 54117162, i32 -963561881, i32 -1913048708, i32 -525259953, i32 -140617289, i32 1140177722, i32 -220915201, i32 668550556, i32 -1080614356, i32 367459370, i32 261225585, i32 -1684794075, i32 -85617823, i32 -826893077, i32 -1029151655, i32 314222801, i32 -1228863650, i32 -486184436, i32 282218597, i32 -888953790, i32 -521376242, i32 379116347, i32 1285071038, i32 846784868, i32 -1625320142, i32 -523005217, i32 -744475605, i32 -1989021154, i32 453669953, i32 1268987020, i32 -977374944, i32 -1015663912, i32 -550133875, i32 -1684459730, i32 -435458233, i32 266596637, i32 -447948204, i32 517658769, i32 -832407089, i32 -851542417, i32 370717030, i32 -47440635, i32 -2070949179, i32 -151313767, i32 -182193321, i32 -1506642397, i32 -1817692879, i32 1456262402, i32 -1393524382, i32 1517677493, i32 1846949527, i32 -1999473716, i32 -560569710, i32 -2118563376, i32 1280348187, i32 1908823572, i32 -423180355, i32 846861322, i32 1172426758, i32 -1007518822, i32 -911584259, i32 1655181056, i32 -1155153950, i32 901632758, i32 1897031941, i32 -1308360158, i32 -1228157060, i32 -847864789, i32 1393639104, i32 373351379, i32 950779232, i32 625454576, i32 -1170726756, i32 -146354570, i32 2007998917, i32 544563296, i32 -2050228658, i32 -1964470824, i32 2058025392, i32 1291430526, i32 424198748, i32 50039436, i32 29584100, i32 -689184263, i32 -1865090967, i32 -1503863136, i32 1057563949, i32 -1039604065, i32 -1219600078, i32 -831004069, i32 1469046755, i32 985887462], align 4
@key_P = common global [18 x i32] zeroinitializer, align 4
@key_S = common global [1024 x i32] zeroinitializer, align 4
@in_key = constant [5200 x i8] c"KurtVonnegutsCommencementAddressatMITLadiesandgentlemenoftheclassof97WearsunscreenIfIcouldofferyouonlyonetipforthefuturesunscreenwouldbeitThelongtermbenefitsofsunscreenhavebeenprovedbyscientistswhereastherestofmyadvicehasnobasismorereliablethanmyownmeanderingexperienceIwilldispensethisadvicenowEnjoythepowerandbeautyofyouryouthOhnevermindYouwillnotunderstandthepowerandbeautyofyouryouthuntiltheyvefadedButtrustmein20yearsyoulllookbackatphotosofyourselfandrecallinawayyoucantgraspnowhowmuchpossibilitylaybeforeyouandhowfabulousyoureallylookedYouarenotasfatasyouimagineDontworryaboutthefutureOrworrybutknowthatKurtVonneguKurtVonnegutsCommencementAddressatMITLadiesandgentlemenoftheclassof97WearsunscreenIfIcouldofferyouonlyonetipforthefuturesunscreenwouldbeitThelongtermbenefitsofsunscreenhavebeenprovedbyscientistswhereastherestofmyadvicehasnobasismorereliablethanmyownmeanderingexperienceIwilldispensethisadvicenowEnjoythepowerandbeautyofyouryouthOhnevermindYouwillnotunderstandthepowerandbeautyofyouryouthuntiltheyvefadedButtrustmein20yearsyoulllookbackatphotosofyourselfandrecallinawayyoucantgraspnowhowmuchpossibilitylaybeforeyouandhowfabulousyoureallylookedYouarenotasfatasyouimagineDontworryaboutthefutureOrworrybutknowthatKurtVonnegutsCommencementAddressatMITLadiesandgentlemenoftheclassof97WearsunscreenIfIcouldofferyouonlyonetipforthefuturesunscreenwouldbeitThelongtermbenefitsofsunscreenhavebeenprovedbyscientistswhereastherestofmyadvicehasnobasismorereliablethanmyownmeanderingexperienceIwilldispensethisadvicenowEnjoythepowerandbeautyofyouryouthOhnevermindYouwillnotunderstandthepowerandbeautyofyouryouthuntiltheyvefadedButtrustmein20yearsyoulllookbackatphotosofyourselfandrecallinawayyoucantgraspnowhowmuchpossibilitylaybeforeyouandhowfabulousyoureallylookedYouarenotasfatasyouimagineDontworryaboutthefutureOrworrybutknowthatKurtVonnegutsCommencementAddressatMITLadiesandgentlemenoftheclassof97WearsunscreenIfIcouldofferyouonlyonetipforthefuturesunscreenwouldbeitThelongtermbenefitsofsunscreenhavebeenprovedbyscientistswhereastherestofmyadvicehasnobasismorereliablethanmyownmeanderingexperienceIwilldispensethisadvicenowEnjoythepowerandbeautyofyouryouthOhnevermindYouwillnotunderstandthepowerandbeautyofyouryouthuntiltheyvefadedButtrustmein20yearsyoulllookbackatphotosofyourselfandrecallinawayyoucantgraspnowhowmuchpossibilitylaybeforeyouandhowfabulousyoureallylookedYouarenotasfatasyouimagineDontworryaboutthefutureOrworryKurtVonnegutsCommencementAddressatMITLadiesandgentlemenoftheclassof97WearsunscreenIfIcouldofferyouonlyonetipforthefuturesunscreenwouldbeitThelongtermbenefitsofsunscreenhavebeenprovedbyscientistswhereastherestofmyadvicehasnobasismorereliablethanmyownmeanderingexperienceIwilldispensethisadvicenowEnjoythepowerandbeautyofyouryouthOhnevermindYouwillnotunderstandthepowerandbeautyofyouryouthuntiltheyvefadedButtrustmein20yearsyoulllookbackatphotosofyourselfandrecallinawayyoucantgraspnowhowmuchpossibilitylaybeforeyouandhowfabulousyoureallylookedYouarenotasfatasyouimagineDontworryaboutthefutureOrworrybutknowthatKurtVonneguKurtVonnegutsCommencementAddressatMITLadiesandgentlemenoftheclassof97WearsunscreenIfIcouldofferyouonlyonetipforthefuturesunscreenwouldbeitThelongtermbenefitsofsunscreenhavebeenprovedbyscientistswhereastherestofmyadvicehasnobasismorereliablethanmyownmeanderingexperienceIwilldispensethisadvicenowEnjoythepowerandbeautyofyouryouthOhnevermindYouwillnotunderstandthepowerandbeautyofyouryouthuntiltheyvefadedButtrustmein20yearsyoulllookbackatphotosofyourselfandrecallinawayyoucantgraspnowhowmuchpossibilitylaybeforeyouandhowfabulousyoureallylookedYouarenotasfatasyouimagineDontworryaboutthefutureOrworrybutknowthatKurtVonnegutsCommencementAddressatMITLadiesandgentlemenoftheclassof97WearsunscreenIfIcouldofferyouonlyonetipforthefuturesunscreenwouldbeitThelongtermbenefitsofsunscreenhavebeenprovedbyscientistswhereastherestofmyadvicehasnobasismorereliablethanmyownmeanderingexperienceIwilldispensethisadvicenowEnjoythepowerandbeautyofyouryouthOhnevermindYouwillnotunderstandthepowerandbeautyofyouryouthuntiltheyvefadedButtrustmein20yearsyoulllookbackatphotosofyourselfandrecallinawayyoucantgraspnowhowmuchpossibilitylaybeforeyouandhowfabulousyoureallylookedYouarenotasfatasyouimagineDontworryaboutthefutureOrworrybutknowthatKurtVonnegutsCommencementAddressatMITLadiesandgentlemenoftheclassof97WearsunscreenIfIcouldofferyouonlyonetipforthefuturesunscreenwouldbeitThelongtermbenefitsofsunscreenhavebeenprovedbyscientistswhereastherestofmyadvicehasnobasismorereliablethanmyownmeanderingexperienceIwilldispensethisadvicenowEnjoythepowerandbeautyofyouryouthOhnevermindYouwillnotunderstandthepowerandbeautyofyouryouthuntiltheyvefadedButtrustmein20yearsyoulllookbackatphotosofyourselfandrecallinawayyoucantgraspnowhowmuchpossibilitylaybeforeyouandhowfabulousyoureallylookedYouarenotasfatasyouimagineDontworryaboutthefutureOrworrybutknowthattsCommencementAddressatMITLadiesandgentlemenoftheclassof97WearsunscreenIfIcouldofferyouonlyonetipforthefutureKurtVonnegutsCommencementAddressatMITLadiesandgentlemenoftheclassof97WearsunscreenIfIcouldofferyouonlyonetipforthefuturesunscreenwouldbeitThelongtermbenefitsofsunscreenhavebeenprovedbyscientistswhereastherest", align 1
@out_key = constant [5200 x i8] c"\05\8C\E517\F7\B3\16\EAt\C5ih\FA\1Ej\FD|)i\EF\FC\BD\EF\B6?\BB\8C\EF\FD\8E\D8\1A\89\AA\E14\F8\0D\ADM4\F9C\C2\F6\CF\05M\11\AA\18!H\FC\09\1C\07!\909}\FA\8F0W\CB\C1\CD\CB\CF\CA\D6\878\13L\FBdz\8D\87g\D2\ADOm\10\CC\9B\02\0C#z\F7B\D4\1E\B7\CF\8E\C9\FF1\E5\D18\D5\AB\E8\B5z>*K5\88\EA\03,\12\08\86\A0\C1\DE\5C\97]\EELC\BA\91\1D\B8\D6\AD\B21)\FB\80\B9\BF1p\DF\FCU\DB_Dh\D2\03\137\7FLJ\0C\B4\16|\FC.\AA7\007\CA\90\E8\B3\C8\C9\CE%\DB\C3bM\9A\9D\16'\A9BW\CC\96\19Q\D6\91\A3\9A\A6\DC\1A]*#\01\8F\B2\85\03\0B5\B8\08\8F\CF\E6+\BCG88\F1\E6~\B4e\86z\AB\D9\AD\DD8.\A6\F0\9F\1D\B5\E4w\F0\D0\0A\BC\A4\019J\0F\09\8AR\FB\95\F69\1CF\F3\A8\90\C2k\D5pg\BA\AF;\BB\FAZ\EFI\E6\85\AD\C3\5C\D3\8E\A3\E2\B8\EDs9\10\11+\BC\BA\85\A52\C3\13D$\99\B2\0F4U4{]}V$\8A5;\A1\A1\1A\B2\CB\E4\1B%\8CC\EC\07\B6XG\8B\E4\16\0F\93\DC\12\84o\0D\F9(\01o\05\8C&k\06\F9\E6\82G\B2Q'(\1C\D9\D8v\9F\E4\D0y\0A8i\0B\01\A7i@\D1,V\BF\ED\FEe\19~\A1%6\0CW\9C\96\9BE4p\EA\8F\95)\0F-\D3\A5\BD\A2\89\A6\BC\AF\80\E0 \99\80\BE\A9\82\7F\BF\EE\DF\92\9B\B1\8E\B0N\E54`\8Dw\DF$\0A\18\0F\F5\80\07\C4jd\1E ?\84X\85\FA\C3\89\22\5C\DB\14uQ\D8\B5t\F1N\83\B2\22\8A\CE\0A\903\D2lozt1\D5\98\E8\E4\14\F5z\D4\E1\AD\BE\98\15==\B3\ADGn&\07\C6\9D\99\CFW\11**\D7\12\D0Z\AC\9D\17.%\A6\DAA\19\88\ADU\95i6\14\DA\06A\B8\EF.&\9DD\F0\E4u\E0\13\99\03\22\E9/9gO\11\D0\DF\5C\1Eo\7F=\CD\D4\E8\05\CFk\9EQ\C0\87CK<vD3\1E\C8\B0\BB>\01d\AD?v\1Fl\8B\8A\F8\E9Q\F4$\F1\E7:\9A\C9n\09'V\E3I<=(P\C3\E0\BB7\9AHh\DA<\FD\F8\D8Z,\D5N\B1\94L\F49\AA\01\A6K\CE{\A6\CE\87\DD!\82\1A\94\94\E0u8K\972Z1\040\FF\93*\B7:L\83\10m\DEVU\86\FD\D1J\11\DC\EER\C8\8CY\D2u\AE\B4D\06\A3\09\F9\F93|\B65\06='\BE\0A(?\CF\5C\BD\1EE1\08\E9tyP\95\A9H\A4\CB\98G\C9\A9\90\CDS\0A\D6\D5\00\93 >[\A2\A4\A0\D3\C4\9F\A6\09I\DDOut\14gpP\93\E2\CD\19l\D2=\A3.9f\B9~\03\06\1Bv\8BqC>\04\F2X\98_\5C\8E\E9\8B\22\B1\F4\82\0C\04S\1D\A8\AB\0FFs\D8$\DAj\D5\5C\D7\D7+\9B\C8M\C6D%\FF\D7>\9A4\FB\C6\947\CFOc\F3\87+@\CC\B3j\90Nx^\E9\A0\C8\5C\BF2+\81\E5\A8\C20\83N\E4\A3\9D`\AF\CB\BD\CDQ\EER=TTo\D9\A3\07\12M\9C)\D1/\0A\FA:\EC\BB\F8\D4\83<4~\B4q\CF\87p\C0\BE\B1D\ABM\DB\FDi\0C\9D\DE \9F\5C\B9X\C0q'\12M\D7p\DFr\80f*\DB\0F\7F\17r\98}\FE\0C4N\F2J\82}\8A\12,\98\0C\ECu\C2S\C0\FFm\DF\ED\1F\CB\AA(\BCZ.\C4|\F3\99\7F\F7t\AEC\E9\C7\94oD<N\C4w\9F\DAUp\09\14F\A8M.\1A'\13\0A\AC\9F\87\0A~\19\85\CF\C1 \99}e3UNNL\91\BAf\F9N\B6\8A\E0\11\CF\15\CD2\8B\DF\05\C4N\FE\EFR\81\DE\16\92\F5\B2\CD\A9\A8\8A\93\18oE^q\BE\9DR\E9W\86\95\FD[\A1\80-\FEQKf\1A\9A\9FI\A3\C6\06\1BT\88\A5t\BE\EA\11\A0\00\EDx\96\FC{\AE\EE\88\1D\E2\D3\14Vhz\87\F1\11\E5\CFzB\89\A4\1A\01Zj\8F\B6E\A0\BA\0A\E79O\E2\D1\BA{R\E7\E4B\EF\D6h\C8a\01\E5f\80Mi6v:U$\EF\85#\04\D0\8D\13\B1\AClm\9E'CF0\AF\D4\B5K2\F8b^\A1|\F9\BB\9E\89N#\8EZ\82qy?%K]\AE\16tsi\D7\DD\93u(\8E&i+\9A\A9'P.6\06\99\8F\F8\C1n\E8M\8Ca\14z\FDRP\CD\F9\8C\A8\8E\02\DF\9B\80K\F8K\A8Fq\82\C4heo\B6&\FA7\18\9CI\AFN6\0A\02\8E\FD\CE\04\CB\B1\DF_\E7-\0C{y\ED\95\BF1]R\9DUU\96\22\F1\ECW\09\BC\AC\97_X\00`\E9\D7\82\F7\9D\0A\1E\99\F9\C6\9F\BC/P\AF\DB\AB7\AC\D6\E76X2WqT\0A#\AAz_\ACI\E0ab(\9A\87^\8Am3\BD\95\B04\9Dk\18\18\1D\A2S\14\E4\C5\A3\A3\EEn\A6\D5\84#\AA@\F2\9F,_\E0\F2\FEz\9E\B5\D6\D8\E0\03#t\E2\F6\13\F8\E7\9A\BDH!\1F\A9\22\CCcL\0A5~4\A8p\BB3\AD\0Af\AA\F7\12N\EA6\D3\A5pDUq\F8\A5Z_\14Iy(\EEs\1D\7F\DF\B3\FCMk)\E9w\EFK\D0=\BC\C9#\E6\D7\03\CB\8D|\D2\B4\FC\00\F4\94\BE`-\DA\EAx\8F\88\00?G\D7\09\E9\1B\E2\1D\FFp@\EC\A5A'j\22\22\FB\FC\BC \16\F8\96D\5C\09\073\CD\84\00\06\A3\93@`\A8\CF\EBm\8A\1D\0E\DEh\8Da\B7u\8E&\18\C06\CEh\02<\0EM\EA\B6)\10\C0\03\0B\D4h\E0/\1Bg\D5\A7\B7z>\82\B3z\EE!\DE]\CF\EEuiybgY?\84\A8 f\F4\F0\11\0B\A9N\A7\F7\FD\E2\AE\D5t}c\1Ah6&\FC\D0\87\B0]\0A\1Dc\D9\9B\C6)\F4*c\14\E9\D4\C1\AF\1B{x\BB\9B\A7\0EF\E1\CB\12\81;\B1\87\00\FD\04\7F\9F7W\D7\C2\D0\04\E9^-\82\D5\E7Z\CCcZ)\A6]\08\1A\10|\0E\1F\85\10\B8\80\D1\B2\F7\DF\D3\09~`\1AV+~\11z\0DZk\99\C1V&\13\D9uH\F1\B8\A4\8E\A4\A9\EC\E2r\A9\16\E6\A8q\80\03\A61^G-\A1 M\A4~\C5\E2\83\BC\B0r\7F\1F\A2\C8\A8k\83X>\F8H\83\E1q\92\BD\FCh\94\116<\BF\CE\A1qU\C9\1A\C9|\17\91\86\12\BB\8F#\F6Jt+%h\F7\FA/;\FB\93`\CD\CF\84\CAa\BC\A9\86\0F_\BA\1F\9C\B7\00\F1\83\86\00<\96\93;\11\9AI\F5\12<\B4\B5q\C7\8F`\A2\C5\F9@%\AE\D90\17}\8D\D5\E3\FA\8B\C2L\EA\16\B9\EErX\0B?\08X\DAQ1\1F\D6\D4='\BF\C7a?/^\FC\C5\02_\F32\97\FE5\F4\C49<0T\0EU\D2\A31\D6G\BF\9F\EF\A5B\9BU\F0\5CZ:x\12\CB\BCP&\BC\B1p\B0h\9F\D6\D31\5CzA\B08F \99E\0C\89\C7\9FF\F2\B4<t\EBdX\FAC\E1h\81I\9B\AAd{\F3/\11\0A\89\B8>\03\F34\F4\93v\B8\17\07\16D\CE)\A7\CB\A6\E2\D6\B3\F3\F9\16v\E0g88\06\F6/(k\C08\154\A6\DCg\DBT\D2\14\19V&\B1\9D\C0\A3C\AA`*w\CB\CD\8C\D8\EB\E4\8A*\B3}Ip\C7\B4&\9Fd\5C\90\9E\F0\B7\CE*\F0\CE\F6\B6@9If\A4\E5\8CY\DB\EAc\A9n|]\BB[\05\C5X)\01B\92\0E\82p\BE\1C\11y\D9q\1F\EB\CD\A4\C0e\F8\8219\EFW\06u\81v=\D5\DB0Eq\B72?\9A\E3g\81Cq\98\F7\B3Q\88\EA`\92]\8B\C3k\DA\96+\81\1FS9\AB\EA\0BZF\A8\00\D2\82=n\D7\FB\A1=\92s\9A\A1\AD\8AB\F6=\10PJvg\90\D8\DBp7\D50\F5\C9\F0M_\E7\D9\CC\CE4\E3\F7:\81e\E7'\B3\BBBrZ\C1E\CB\CA\FCb\82\92\A16I\AB\A9\C9\18}\11\E8\B9A\1B\D4\E1\8E`S\17\8D[\9A\A1R\FD\FA\9A2U\DD\1B\B5\A8s\F3\F9\18\E5\9A\88sn\16\D7\A6?\13\13\C9\BB;T\11\81p\92c\13\B0\CFw\0B\DD\D6\06\16\87\E1\91t=e\80V\DA\D2nb\13\C4u\F8\C6\0D\96m\1En4?\DC\AA\D6\E2b\97{\C4\E9\A5\C6\8EK\05\BC\F1\9F\228e==\D0\8C\B3\19\89\85~\B0\A6\18\CE\85=]\80\FF\D8a\073\FB0M\D0\8B\9E\BB\D8\D8\9F\0Ar\F3\1F\F8Q\A0w\BD\DFKO-\0D\87\C1\E5\F7\92\F1r?A\22g`\C5\05\0F\E4-\D0\C8\C9\95J.c\B6\C9\8F\B8,\9E;75\0A\F9w\08\EF\AE\F4\A8\0F\96A\B6\BA2\09\C5\B0\F0\F3\B1\B5R\FB\0C#\F4\17\9E>\98+\ED3\D3\1D\CFZ\9C\0BP\C7\C1t\E6\97\98\FD\F4V\9B\08\F6\B8c+@\C4][\A9\05\ED\02:\D0Y\E1\CE\1F\1C\91 J0\133\C6\B7\EF4\D8\BC\98]n\8C-\921\1F\ACu2\08D\CC\03\DBu(\C3\E8\B3\C8\BAx7\01b\A8xp\B6\DA\DEMq\FF\BD\00\91XH\C7W\CCi.\BCMM\B7\15V2\D9\C3\0A\D7\1D\AE\9B>\DBH\7F\B5P\B3\B1\AF8\D5A<c\B17\0D\CD\F6#\CAg\D7qm\B9W\B9Z\01JX\95\BB\E6Q\03\87\AAIFqv\B7\FA\D1\D0\F8\11\C4$\BC\80\B91\86\96m\C3\0E\C1\8E+\05u\94\0F,\92\91\A2|\CA\EF}\CD\82\BD\DD\FD\ABI$\7F#\0C\E6\99\9F%\E3R\BC\E2l\B6\82=m~\8E\FE\F3+X\AC\1E\C1x\98\90\FC(\1F\13\B5v\1BC\A7\FE\F2bW\C0\16\AD\AD\81\09pvZ\8E\AF)P\C6\17\11S\C5\A3\FC\04z\F9}G\1BWG\19\ED\83\90\BD\F4\8C\DE\0B_\88\A6pX\04\1B\FA\07\DD\9Fv\22\B5p\0B@\DE_G\7F\D2Y\0BI\7F\D9\D7\FA\87\DF\E0\9B\1C\D2\AA\7F-|\94\9B|\83?z\85\15/\93$\BD\B0\91I\08\1F\C5\8A+\A0\A3.H0\1A8\AB\8A4\16\B7\BF\EAk\E6\CAW\FFl\AC\84\A4\9A\88\C8U\83\04\BCj\01\D5*1\DDF\DEpcGi\CE\0Dg\DF%h$a\FD\95\DEQ\E8\E9\E4\DF\88{\C9\0A3\AFP\A8\C6\EE(\A1q\AA.\90\C2\DA\98P\02\E4\DDD\BF[Q\15\D8D\9Cu\91Xo\F1\C9!\9E#\F5E\8C\A2+l.wE\E0y\88M<v\DB\97\93O\A1\EA\C1.\D8\DF\F1\EB\0F\E3\1BG\EA\EB\A3\8F\82j\F4\CA\17\DE\B94m\96+QD\DA\A2\AFL\A5\85\E8\ACh\F0\E2\86\10\BA\CA<*[\D1\80\04\FF~\9C\8E\F0\8F\E0\F0\06c?\D7JG9\12\19E\93V\9C\FC\9D\E3\AB\9D\10aeMF\DA\D42D\97k\AD\8C\DD\BA\D9'&\17\D9K\FBI\B2\06\E2\09\BB\E4K\C6]\BF\B4\1A\1D=\D7\87\00\ECA,,\B2\18\02b\5C\97\FAD-\C4\B2\AE_9\D9Xm\A3\EDa\CA\92\E7'\C5\1B\F2o\BF\0B\D1\02\9D\04\1A5\93\FA\8EB\CDM\E6T\956=\14\D4@?\F1c\EC\BAx\1C.\D1{\FEVb\00\8A\BF\02\B6\FA\B3B\DF\C1\80\FF\0Fc\04\0A\B2\85\9D\0E \CB*\DD\A0\07\B2/L\8B\83l\FCX\90)\13\DB\A8\D1\F8\C1\81W\B2y8\84Q$_\1E^\F2M\E0s;\D0\8E\AFk\C7\C0f\94\1A$\A7\D5li\B9c\B4d\AC\A3\EF\F8\E86\A9\B6\FC\86TpB\1A\1AS\8F\A2\C6\D6\02\EE\89\C3\A5\11#\DD\08e <T\8A\8Ef\F1#\FE\A8\BEn>:0\E4i\DB:\9F\B0\A2\E2 U\DA}|\DD'\AF;\F7n\B6\82\1EJ\10\8D\E8q\CB\8D\EA*Z\FB8]\01\9B\FF\04=C\10-\E9\C3J\0E\94v\F7\E0\AA\8D\E2S\BE\D1Z4\E1x\C9\EEL\CD\0C8*Tz^\EC\18|\87\A2\D8\90\05\E7l\A0!\C4c\02\FD\AF9;\05\05\E5\16\F1&|\B8AR`\D3\91\0F\1C\7F\90\E7\ACo\B8\FBG\D6\90`x\8D\80VaT\8A|\AA\A3\13\0B\B6\B6m\FEw\E9Io\94\09L\B4v\14\1D\BA\03\EF\F5\B3{\83\0F\CB\D7@:g\8D\1D\01\CE\B6\A8\D3v\98\F6Ds\A0'\0F\22\89\AE\AA\8Bv\CD\12\A6\E4T\8EY\B1\C9\0D\A3D\B3\DC?\BAd\1A\CD\93\F1}\BCr\A6\A8\D6e\94@\FF \D5\02'36bI\BDq\0EiV\E0i\B125\89\AD\99q\D7\06p\81q\FEbJw\0F\F7r\ED\A5\86\F7\E3t\B5Y\BD,R\07\C5\8C\9A{\9De\939\A2\8F\F8\8F\82i\9A\F5\C6m&\8B\CE\FF\AA?!\84x\E1\D5\1D\BA\A8\CC|\EF\C4\87\18\06e\D6>*\EF-\1D\F9\BA\A8tT6\82b\AAt\80r\A3\13\D3\1C\8E\07i\98\BC\11)\09(\1F\89Ebc\D1P\1E\D2\1Fp\93\DFjAJf\10i \D1s\B7F.\FDO\BA\1B\115\919\10\12\F9\15\AA\09n\BFs\22Gw\BD\16\9A\E7\9A\F8\0B\E4G\C6\0F\1A\E0&\19\A9L\A42\AA\B9p\BA\83\D4\BF\01 \A8\5C\14\E7@\A7\C1\BF\B0>Y\B6\8E\17\03S\0FyJ\B1t\5CX\AF\ECE\FD\10\1D\DF\C5\8Ax\9A\B9\DD0\85~\1B\ED\80g\94\D2\83_k\17.8\A7\91\BEEV\BC\F7_\AD\BB#+\A3\B4\C9\D1\C0\D1\91R+\FCR\17\0D\B6\A5\D2\C2\5Ct\FAdC\9F\84\95d\89T\1C\CFi\0D=.}\09qk\C2\C0\91\D7\B4F\1B\19\E8\DC\8F\1D@\BC\D0\0B\05\D9\C3_\0B\E2c\E2\CAuk\8D7/n\B9\C6\D6\94\B1\D1\96s\13\C9\CD\AD\F0~\AE\8B\D5\D7\04\14](l\B8\FCdu6x\7FG\A4\FC\F8I\86+2\DFH\8B\92\B9q%\AD\A2\8C\D2$\C5\10\9Ft\92\D4a\81\F8\FC\89\94`\82l\CF){\CF\F7c\FD\AE\0D\AC\D6\BA\C2\CF\FF\A0\92\C5\FA\DAn\C1\13~LcXm2\85\BB\CEt\0F\D1|Q\BCX\1C\EF\F1DG\1E}\82\1E\A3m\9C\8Cp\EE](\D0\08\E4\A1\E3\FF\BD\AF\05\C4\ED\B5ewS\BA\89\D4q\831\9Bzs\9F6\0Fv\09V\C2\CD\8C!\03\02\08\D1\1F\A0\05\1A\1D\B3\FC\99\D2\5C\F2S\16`M={\E4vCO\02\18\E8\06\D42\D6\B8/\18K\DA\A0\BE\84*\BEU\B2\E6F\D1S(\96\B0\86|_@\EA\A3\D4`\C7N\C7\AD\1A#\1BvI\91\B8\8B+#L\93\B1\A2^\E5b\AB\0E.\D0\06pA\AE\E5\801\1D\C9K0\D7\89\BC\EC\0D\D4\15w\FD\BCNoy\B2\02Z\C9:\F7]\B7\10\8A\EE\CA.M(\1C\BA~\E5\D9\C6\BE\A6v4d\EB_\D7\98<\16{\EB\D00\C3\7F\D8\BDb\8A\AA\F4\DEy\CB\CC\A5\11i1[\B8y\9E3\95\9C\C7\1C\A0\A2\07\CB<{\F0\97\F72\E0\DE\86\CDsHl\01.\1B|\B2\AF\DE\13{A5MXR\C1\F1\0Ae\83\CFvnq1\11\AAv\01\0Fc\C3\D2\ED\B5\E64;\B1s;\EB\D19\80\C8\DE\08o\07M\F4\09m\FB\EC~\E1\13`[Yb'\E0\ADF\8FDi\B1\FD\0C\5COX\CE$\83d\BBS\DF\A2\ABT\1DE\E8o\F0%\04\8Eu1V\CC\D9$:$\0En\DD\10\19\BB\F3\1DE\13M+\0AQ#\E5\E58\F7C\81d\D2\94)\EF\E9G\8A\BF\03J\0F\9F\DF<\C9\D2\9FK\1E\D8\83\B1\AB?\F3\BD'\9C\FFs\B5\F0\09\D8\B8\E4\CB\87\F2ll\A7\122\AB\17\8B\95\E8)\B8&\D8\E8g2t\92\8D\BB\CC<\F9\8C\0D\0Di\8Cq\B8y\EA\C7 \AB\13\F6\C0c\C26\A0_\B1c\5C\B4\9DT\0A\7F\8D\FC>;\8BT\9BM\D4\0E[\B0\A3\D8\02\9C\E4\E9!\96\DF\B5\C2`2.M\A0\EE\A6#\00\B4\08~\0F^\08\0A&_U\85\A3\97\13\FD\22g*z\D6\DD-\8A\D5\A0\CF^v!\81\C0\16\A1\B7\D3\C0\8D\CE\C5\8D.\FE|K\E8\1A\AFM\B8\EE\1AY\8Dv\8BI\B5q\E1\F9\84l\08\09\CF\99L\E9\155\A9\D9e\86\E3\D7\C7\E5W\1F\EA'\11\88\C4Z\0EM\FD\D0\13\E5+\FE\02qSFL''G\87\01\B2\8F[\CD\1CfW\E2FK\AEK\A3~V>A\87\8B\84\86>\5C\BA\00\03W\FDm\A68\BA|\E01\AB \EF.\A3i\A8\F3\8Eod\CF\D0\08p^\91\1E\19q\E1E\E9\DF\F2!\C5\CC\03T3\BDX\99X=\87\16\E2\B1\DE\95F\A6\C7'g\AF\C6\12\B7w\5CU5\AAita\D3G\CF\05k\F5\9A\D4\03\86\CE+z\E0\C3\1A\BD\1A\D7\B3\C7\12\FC\B2e\B9\C2\A9\9B\B1\88\D3\B4\EAX\E0\17\DB\AF2#J\F1\93l\7Fn\D3\F1\9F\D0\E9\C2\A9\05t\9B\A0z\90b\C8\D71\09\83\8C|\9BR\DE\E7\E0\CBAs^\C8q\8C\C0}#\A7\83\98\9EA\C19Q\AC\E8-\B8A:\0C\D3j\E3\FDN\AFT\D0\F3qd@i'\F5\DFs\FCjO\C0\A6\19\95\8D\F0\D7\BD\B7\C1J\BFsPb\19\B6\01\A4\9C\0B\13Gm\D9m\FF\01\D8\F1\95qJZ+\0A\C8\E7(I\E7G\CE\7F\F3\9F\BA\AB9t\09Z\102\AA\07\05P<\80JD\B2b\F6p\BAH\E2\B7\C0\049\1E\DD1\CB\ED\03%\FD/\C7\CA(8e\B1\96\D3\97\A5g\EB\D3\D1\890\03.\06\C6$\A7\FB\BEI\D6\08\D0\F9\05\07\F5\A9\C3\E6tl\81\B47m\CB|\0B\B3-\A86\146\E6\FD\7F\C3z\EC\AF\A4\CD\F5M\C3r\0B\C3\8F\F5{\E8\F1\5C\D5\C7\1B\AA\E6 B\AF\7FZ\93\01\E9L\14\E5V~\A7\BF\D8uU\F8\BC\D6\E9\8BU\C2\08\D6\9D\EB\A8\B2#\C0\B1|\8CF\D4vtz\ED\14i\E5\0E\B1\E7\C9c\8Cah\1A\E2C\E9\19\B04P\88\DC\90\CC\C0h\00\98S\AF\FF{(t\14\BFOD=\E0\D4L\D6\BE\EAWB\E03\BBf(0\9Bj\D8i\D4m\E9rx\E1\9D\82\0D:,o\DF\D3ElA\11\D5\BCK\C5\F2(J!b\09\12\CC\C1zd\CE\CC\BD\F3\ADGn\E6\F3g\A5c\12W\D1\B7\22\C3\02\C7\C1\B6\97\92k\CA\A6\DEO\C4\8DY\C5\FE\B8\104\03\D8\095M\1D\DE\80\94+u+\A6;\99\CF\99Z\D3x\FFn[b\82\AB\95\5C+\B3+\1A\B9\0F\07\10]oU\A2 \8F\0E\00\AD\01F\C5\D8\AA\E7\8E\AE\EE\D1 \16\E4\D0'b\0F2\0DE\DC\A9\D0D@e\D1u\AF]\D4\FDIK\F9\015\B4^{R\A8 A\8A\88\FCZB\C1\B9<\F8\AC\A1\E4\80\82nv\5C\C693SR\F0At\94\DF\CE\94|m6\CA\1C\A9\CAd\1B\EB\ED12\BCHX\BAa(\12Q\9Dxm\C1.\03P5\B6\1F\D6\A5 \97^\04qN\DC\CD$\85\ED\97\012\A0?\D2AT\94X!\0E\D0\5C\AEu\A4\B5\C5\9B\EE\90\F6\1A\0C\D0<:_yi\85\1D@\18)\DD\B8'M\A9q\8B\A0%\E8dS\B8\D1\0450\EB>g\F7\158<m\9AL\06]^E\13K\CCA\09\DFt\FB\F5r\15\F4\F7.\98=\D7i\F7-=\0Bs\A3\117\CE6\0F\ADs\7F\0C\02>\E3\A0\03*\FD7\A5\95\02\E7\86yBO\19{\D9\8B\ADW\E8\E8^\94\A9\A6 $\9E\CB\8D\91\1A|\B2T\EF\17\CCh\C6\BA\90\97Q\97\EC\82\F9HUgm\B7x\95->Z\EE\91\22m\D1~\81\CF\81L\5C\B8:yk1'J\A0\D2#", align 1
@.str = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1

; Function Attrs: noinline nounwind ssp
define void @local_memcpy(i32* %s1, i32* %s2, i32 %n) #0 {
entry:
  %s1.addr = alloca i32*, align 4
  %s2.addr = alloca i32*, align 4
  %n.addr = alloca i32, align 4
  %p1 = alloca i32*, align 4
  %p2 = alloca i32*, align 4
  store i32* %s1, i32** %s1.addr, align 4
  store i32* %s2, i32** %s2.addr, align 4
  store i32 %n, i32* %n.addr, align 4
  %0 = load i32*, i32** %s1.addr, align 4
  store i32* %0, i32** %p1, align 4
  %1 = load i32*, i32** %s2.addr, align 4
  store i32* %1, i32** %p2, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %2 = load i32, i32* %n.addr, align 4
  %dec = add nsw i32 %2, -1
  store i32 %dec, i32* %n.addr, align 4
  %cmp = icmp sgt i32 %2, 0
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %3 = load i32*, i32** %p2, align 4
  %4 = load i32, i32* %3, align 4
  %5 = load i32*, i32** %p1, align 4
  store i32 %4, i32* %5, align 4
  %6 = load i32*, i32** %p1, align 4
  %incdec.ptr = getelementptr inbounds i32, i32* %6, i32 1
  store i32* %incdec.ptr, i32** %p1, align 4
  %7 = load i32*, i32** %p2, align 4
  %incdec.ptr1 = getelementptr inbounds i32, i32* %7, i32 1
  store i32* %incdec.ptr1, i32** %p2, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  ret void
}

; Function Attrs: noinline nounwind ssp
define void @BF_set_key(i32 %len, i8* %data) #0 {
entry:
  %len.addr = alloca i32, align 4
  %data.addr = alloca i8*, align 4
  %i = alloca i32, align 4
  %p = alloca i32*, align 4
  %ri = alloca i32, align 4
  %in = alloca [2 x i32], align 4
  %d = alloca i8*, align 4
  %end = alloca i8*, align 4
  store i32 %len, i32* %len.addr, align 4
  store i8* %data, i8** %data.addr, align 4
  call void @local_memcpy(i32* getelementptr inbounds ([18 x i32], [18 x i32]* @key_P, i32 0, i32 0), i32* getelementptr inbounds ([18 x i32], [18 x i32]* @bf_init_P, i32 0, i32 0), i32 18)
  call void @local_memcpy(i32* getelementptr inbounds ([1024 x i32], [1024 x i32]* @key_S, i32 0, i32 0), i32* getelementptr inbounds ([1024 x i32], [1024 x i32]* @bf_init_S, i32 0, i32 0), i32 1024)
  store i32* getelementptr inbounds ([18 x i32], [18 x i32]* @key_P, i32 0, i32 0), i32** %p, align 4
  %0 = load i32, i32* %len.addr, align 4
  %cmp = icmp sgt i32 %0, 72
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 72, i32* %len.addr, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %1 = load i8*, i8** %data.addr, align 4
  store i8* %1, i8** %d, align 4
  %2 = load i8*, i8** %data.addr, align 4
  %3 = load i32, i32* %len.addr, align 4
  %arrayidx = getelementptr inbounds i8, i8* %2, i32 %3
  store i8* %arrayidx, i8** %end, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load i32, i32* %i, align 4
  %cmp1 = icmp slt i32 %4, 18
  br i1 %cmp1, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %5 = load i8*, i8** %d, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %5, i32 1
  store i8* %incdec.ptr, i8** %d, align 4
  %6 = load i8, i8* %5, align 1
  %conv = zext i8 %6 to i32
  store i32 %conv, i32* %ri, align 4
  %7 = load i8*, i8** %d, align 4
  %8 = load i8*, i8** %end, align 4
  %cmp2 = icmp uge i8* %7, %8
  br i1 %cmp2, label %if.then4, label %if.end5

if.then4:                                         ; preds = %for.body
  %9 = load i8*, i8** %data.addr, align 4
  store i8* %9, i8** %d, align 4
  br label %if.end5

if.end5:                                          ; preds = %if.then4, %for.body
  %10 = load i32, i32* %ri, align 4
  %shl = shl i32 %10, 8
  store i32 %shl, i32* %ri, align 4
  %11 = load i8*, i8** %d, align 4
  %incdec.ptr6 = getelementptr inbounds i8, i8* %11, i32 1
  store i8* %incdec.ptr6, i8** %d, align 4
  %12 = load i8, i8* %11, align 1
  %conv7 = zext i8 %12 to i32
  %13 = load i32, i32* %ri, align 4
  %or = or i32 %13, %conv7
  store i32 %or, i32* %ri, align 4
  %14 = load i8*, i8** %d, align 4
  %15 = load i8*, i8** %end, align 4
  %cmp8 = icmp uge i8* %14, %15
  br i1 %cmp8, label %if.then10, label %if.end11

if.then10:                                        ; preds = %if.end5
  %16 = load i8*, i8** %data.addr, align 4
  store i8* %16, i8** %d, align 4
  br label %if.end11

if.end11:                                         ; preds = %if.then10, %if.end5
  %17 = load i32, i32* %ri, align 4
  %shl12 = shl i32 %17, 8
  store i32 %shl12, i32* %ri, align 4
  %18 = load i8*, i8** %d, align 4
  %incdec.ptr13 = getelementptr inbounds i8, i8* %18, i32 1
  store i8* %incdec.ptr13, i8** %d, align 4
  %19 = load i8, i8* %18, align 1
  %conv14 = zext i8 %19 to i32
  %20 = load i32, i32* %ri, align 4
  %or15 = or i32 %20, %conv14
  store i32 %or15, i32* %ri, align 4
  %21 = load i8*, i8** %d, align 4
  %22 = load i8*, i8** %end, align 4
  %cmp16 = icmp uge i8* %21, %22
  br i1 %cmp16, label %if.then18, label %if.end19

if.then18:                                        ; preds = %if.end11
  %23 = load i8*, i8** %data.addr, align 4
  store i8* %23, i8** %d, align 4
  br label %if.end19

if.end19:                                         ; preds = %if.then18, %if.end11
  %24 = load i32, i32* %ri, align 4
  %shl20 = shl i32 %24, 8
  store i32 %shl20, i32* %ri, align 4
  %25 = load i8*, i8** %d, align 4
  %incdec.ptr21 = getelementptr inbounds i8, i8* %25, i32 1
  store i8* %incdec.ptr21, i8** %d, align 4
  %26 = load i8, i8* %25, align 1
  %conv22 = zext i8 %26 to i32
  %27 = load i32, i32* %ri, align 4
  %or23 = or i32 %27, %conv22
  store i32 %or23, i32* %ri, align 4
  %28 = load i8*, i8** %d, align 4
  %29 = load i8*, i8** %end, align 4
  %cmp24 = icmp uge i8* %28, %29
  br i1 %cmp24, label %if.then26, label %if.end27

if.then26:                                        ; preds = %if.end19
  %30 = load i8*, i8** %data.addr, align 4
  store i8* %30, i8** %d, align 4
  br label %if.end27

if.end27:                                         ; preds = %if.then26, %if.end19
  %31 = load i32, i32* %ri, align 4
  %32 = load i32*, i32** %p, align 4
  %33 = load i32, i32* %i, align 4
  %arrayidx28 = getelementptr inbounds i32, i32* %32, i32 %33
  %34 = load i32, i32* %arrayidx28, align 4
  %xor = xor i32 %34, %31
  store i32 %xor, i32* %arrayidx28, align 4
  br label %for.inc

for.inc:                                          ; preds = %if.end27
  %35 = load i32, i32* %i, align 4
  %inc = add nsw i32 %35, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %arrayidx29 = getelementptr inbounds [2 x i32], [2 x i32]* %in, i32 0, i32 0
  store i32 0, i32* %arrayidx29, align 4
  %arrayidx30 = getelementptr inbounds [2 x i32], [2 x i32]* %in, i32 0, i32 1
  store i32 0, i32* %arrayidx30, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond31

for.cond31:                                       ; preds = %for.inc39, %for.end
  %36 = load i32, i32* %i, align 4
  %cmp32 = icmp slt i32 %36, 18
  br i1 %cmp32, label %for.body34, label %for.end41

for.body34:                                       ; preds = %for.cond31
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %in, i32 0, i32 0
  call void @BF_encrypt(i32* %arraydecay, i32 1)
  %arrayidx35 = getelementptr inbounds [2 x i32], [2 x i32]* %in, i32 0, i32 0
  %37 = load i32, i32* %arrayidx35, align 4
  %38 = load i32*, i32** %p, align 4
  %39 = load i32, i32* %i, align 4
  %arrayidx36 = getelementptr inbounds i32, i32* %38, i32 %39
  store i32 %37, i32* %arrayidx36, align 4
  %arrayidx37 = getelementptr inbounds [2 x i32], [2 x i32]* %in, i32 0, i32 1
  %40 = load i32, i32* %arrayidx37, align 4
  %41 = load i32*, i32** %p, align 4
  %42 = load i32, i32* %i, align 4
  %add = add nsw i32 %42, 1
  %arrayidx38 = getelementptr inbounds i32, i32* %41, i32 %add
  store i32 %40, i32* %arrayidx38, align 4
  br label %for.inc39

for.inc39:                                        ; preds = %for.body34
  %43 = load i32, i32* %i, align 4
  %add40 = add nsw i32 %43, 2
  store i32 %add40, i32* %i, align 4
  br label %for.cond31

for.end41:                                        ; preds = %for.cond31
  store i32* getelementptr inbounds ([1024 x i32], [1024 x i32]* @key_S, i32 0, i32 0), i32** %p, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond42

for.cond42:                                       ; preds = %for.inc52, %for.end41
  %44 = load i32, i32* %i, align 4
  %cmp43 = icmp slt i32 %44, 1024
  br i1 %cmp43, label %for.body45, label %for.end54

for.body45:                                       ; preds = %for.cond42
  %arraydecay46 = getelementptr inbounds [2 x i32], [2 x i32]* %in, i32 0, i32 0
  call void @BF_encrypt(i32* %arraydecay46, i32 1)
  %arrayidx47 = getelementptr inbounds [2 x i32], [2 x i32]* %in, i32 0, i32 0
  %45 = load i32, i32* %arrayidx47, align 4
  %46 = load i32*, i32** %p, align 4
  %47 = load i32, i32* %i, align 4
  %arrayidx48 = getelementptr inbounds i32, i32* %46, i32 %47
  store i32 %45, i32* %arrayidx48, align 4
  %arrayidx49 = getelementptr inbounds [2 x i32], [2 x i32]* %in, i32 0, i32 1
  %48 = load i32, i32* %arrayidx49, align 4
  %49 = load i32*, i32** %p, align 4
  %50 = load i32, i32* %i, align 4
  %add50 = add nsw i32 %50, 1
  %arrayidx51 = getelementptr inbounds i32, i32* %49, i32 %add50
  store i32 %48, i32* %arrayidx51, align 4
  br label %for.inc52

for.inc52:                                        ; preds = %for.body45
  %51 = load i32, i32* %i, align 4
  %add53 = add nsw i32 %51, 2
  store i32 %add53, i32* %i, align 4
  br label %for.cond42

for.end54:                                        ; preds = %for.cond42
  ret void
}

; Function Attrs: noinline nounwind ssp
define void @BF_encrypt(i32* %data, i32 %encrypt) #0 {
entry:
  %data.addr = alloca i32*, align 4
  %encrypt.addr = alloca i32, align 4
  %l = alloca i32, align 4
  %r = alloca i32, align 4
  %p = alloca i32*, align 4
  %s = alloca i32*, align 4
  store i32* %data, i32** %data.addr, align 4
  store i32 %encrypt, i32* %encrypt.addr, align 4
  store i32* getelementptr inbounds ([18 x i32], [18 x i32]* @key_P, i32 0, i32 0), i32** %p, align 4
  store i32* getelementptr inbounds ([1024 x i32], [1024 x i32]* @key_S, i32 0, i32 0), i32** %s, align 4
  %0 = load i32*, i32** %data.addr, align 4
  %arrayidx = getelementptr inbounds i32, i32* %0, i32 0
  %1 = load i32, i32* %arrayidx, align 4
  store i32 %1, i32* %l, align 4
  %2 = load i32*, i32** %data.addr, align 4
  %arrayidx1 = getelementptr inbounds i32, i32* %2, i32 1
  %3 = load i32, i32* %arrayidx1, align 4
  store i32 %3, i32* %r, align 4
  %4 = load i32, i32* %encrypt.addr, align 4
  %tobool = icmp ne i32 %4, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %5 = load i32*, i32** %p, align 4
  %arrayidx2 = getelementptr inbounds i32, i32* %5, i32 0
  %6 = load i32, i32* %arrayidx2, align 4
  %7 = load i32, i32* %l, align 4
  %xor = xor i32 %7, %6
  store i32 %xor, i32* %l, align 4
  %8 = load i32*, i32** %p, align 4
  %arrayidx3 = getelementptr inbounds i32, i32* %8, i32 1
  %9 = load i32, i32* %arrayidx3, align 4
  %10 = load i32, i32* %r, align 4
  %xor4 = xor i32 %10, %9
  store i32 %xor4, i32* %r, align 4
  %11 = load i32*, i32** %s, align 4
  %12 = load i32, i32* %l, align 4
  %shr = lshr i32 %12, 24
  %arrayidx5 = getelementptr inbounds i32, i32* %11, i32 %shr
  %13 = load i32, i32* %arrayidx5, align 4
  %14 = load i32*, i32** %s, align 4
  %15 = load i32, i32* %l, align 4
  %shr6 = lshr i32 %15, 16
  %and = and i32 %shr6, 255
  %add = add i32 256, %and
  %arrayidx7 = getelementptr inbounds i32, i32* %14, i32 %add
  %16 = load i32, i32* %arrayidx7, align 4
  %add8 = add i32 %13, %16
  %17 = load i32*, i32** %s, align 4
  %18 = load i32, i32* %l, align 4
  %shr9 = lshr i32 %18, 8
  %and10 = and i32 %shr9, 255
  %add11 = add i32 512, %and10
  %arrayidx12 = getelementptr inbounds i32, i32* %17, i32 %add11
  %19 = load i32, i32* %arrayidx12, align 4
  %xor13 = xor i32 %add8, %19
  %20 = load i32*, i32** %s, align 4
  %21 = load i32, i32* %l, align 4
  %and14 = and i32 %21, 255
  %add15 = add i32 768, %and14
  %arrayidx16 = getelementptr inbounds i32, i32* %20, i32 %add15
  %22 = load i32, i32* %arrayidx16, align 4
  %add17 = add i32 %xor13, %22
  %23 = load i32, i32* %r, align 4
  %xor18 = xor i32 %23, %add17
  store i32 %xor18, i32* %r, align 4
  %24 = load i32*, i32** %p, align 4
  %arrayidx19 = getelementptr inbounds i32, i32* %24, i32 2
  %25 = load i32, i32* %arrayidx19, align 4
  %26 = load i32, i32* %l, align 4
  %xor20 = xor i32 %26, %25
  store i32 %xor20, i32* %l, align 4
  %27 = load i32*, i32** %s, align 4
  %28 = load i32, i32* %r, align 4
  %shr21 = lshr i32 %28, 24
  %arrayidx22 = getelementptr inbounds i32, i32* %27, i32 %shr21
  %29 = load i32, i32* %arrayidx22, align 4
  %30 = load i32*, i32** %s, align 4
  %31 = load i32, i32* %r, align 4
  %shr23 = lshr i32 %31, 16
  %and24 = and i32 %shr23, 255
  %add25 = add i32 256, %and24
  %arrayidx26 = getelementptr inbounds i32, i32* %30, i32 %add25
  %32 = load i32, i32* %arrayidx26, align 4
  %add27 = add i32 %29, %32
  %33 = load i32*, i32** %s, align 4
  %34 = load i32, i32* %r, align 4
  %shr28 = lshr i32 %34, 8
  %and29 = and i32 %shr28, 255
  %add30 = add i32 512, %and29
  %arrayidx31 = getelementptr inbounds i32, i32* %33, i32 %add30
  %35 = load i32, i32* %arrayidx31, align 4
  %xor32 = xor i32 %add27, %35
  %36 = load i32*, i32** %s, align 4
  %37 = load i32, i32* %r, align 4
  %and33 = and i32 %37, 255
  %add34 = add i32 768, %and33
  %arrayidx35 = getelementptr inbounds i32, i32* %36, i32 %add34
  %38 = load i32, i32* %arrayidx35, align 4
  %add36 = add i32 %xor32, %38
  %39 = load i32, i32* %l, align 4
  %xor37 = xor i32 %39, %add36
  store i32 %xor37, i32* %l, align 4
  %40 = load i32*, i32** %p, align 4
  %arrayidx38 = getelementptr inbounds i32, i32* %40, i32 3
  %41 = load i32, i32* %arrayidx38, align 4
  %42 = load i32, i32* %r, align 4
  %xor39 = xor i32 %42, %41
  store i32 %xor39, i32* %r, align 4
  %43 = load i32*, i32** %s, align 4
  %44 = load i32, i32* %l, align 4
  %shr40 = lshr i32 %44, 24
  %arrayidx41 = getelementptr inbounds i32, i32* %43, i32 %shr40
  %45 = load i32, i32* %arrayidx41, align 4
  %46 = load i32*, i32** %s, align 4
  %47 = load i32, i32* %l, align 4
  %shr42 = lshr i32 %47, 16
  %and43 = and i32 %shr42, 255
  %add44 = add i32 256, %and43
  %arrayidx45 = getelementptr inbounds i32, i32* %46, i32 %add44
  %48 = load i32, i32* %arrayidx45, align 4
  %add46 = add i32 %45, %48
  %49 = load i32*, i32** %s, align 4
  %50 = load i32, i32* %l, align 4
  %shr47 = lshr i32 %50, 8
  %and48 = and i32 %shr47, 255
  %add49 = add i32 512, %and48
  %arrayidx50 = getelementptr inbounds i32, i32* %49, i32 %add49
  %51 = load i32, i32* %arrayidx50, align 4
  %xor51 = xor i32 %add46, %51
  %52 = load i32*, i32** %s, align 4
  %53 = load i32, i32* %l, align 4
  %and52 = and i32 %53, 255
  %add53 = add i32 768, %and52
  %arrayidx54 = getelementptr inbounds i32, i32* %52, i32 %add53
  %54 = load i32, i32* %arrayidx54, align 4
  %add55 = add i32 %xor51, %54
  %55 = load i32, i32* %r, align 4
  %xor56 = xor i32 %55, %add55
  store i32 %xor56, i32* %r, align 4
  %56 = load i32*, i32** %p, align 4
  %arrayidx57 = getelementptr inbounds i32, i32* %56, i32 4
  %57 = load i32, i32* %arrayidx57, align 4
  %58 = load i32, i32* %l, align 4
  %xor58 = xor i32 %58, %57
  store i32 %xor58, i32* %l, align 4
  %59 = load i32*, i32** %s, align 4
  %60 = load i32, i32* %r, align 4
  %shr59 = lshr i32 %60, 24
  %arrayidx60 = getelementptr inbounds i32, i32* %59, i32 %shr59
  %61 = load i32, i32* %arrayidx60, align 4
  %62 = load i32*, i32** %s, align 4
  %63 = load i32, i32* %r, align 4
  %shr61 = lshr i32 %63, 16
  %and62 = and i32 %shr61, 255
  %add63 = add i32 256, %and62
  %arrayidx64 = getelementptr inbounds i32, i32* %62, i32 %add63
  %64 = load i32, i32* %arrayidx64, align 4
  %add65 = add i32 %61, %64
  %65 = load i32*, i32** %s, align 4
  %66 = load i32, i32* %r, align 4
  %shr66 = lshr i32 %66, 8
  %and67 = and i32 %shr66, 255
  %add68 = add i32 512, %and67
  %arrayidx69 = getelementptr inbounds i32, i32* %65, i32 %add68
  %67 = load i32, i32* %arrayidx69, align 4
  %xor70 = xor i32 %add65, %67
  %68 = load i32*, i32** %s, align 4
  %69 = load i32, i32* %r, align 4
  %and71 = and i32 %69, 255
  %add72 = add i32 768, %and71
  %arrayidx73 = getelementptr inbounds i32, i32* %68, i32 %add72
  %70 = load i32, i32* %arrayidx73, align 4
  %add74 = add i32 %xor70, %70
  %71 = load i32, i32* %l, align 4
  %xor75 = xor i32 %71, %add74
  store i32 %xor75, i32* %l, align 4
  %72 = load i32*, i32** %p, align 4
  %arrayidx76 = getelementptr inbounds i32, i32* %72, i32 5
  %73 = load i32, i32* %arrayidx76, align 4
  %74 = load i32, i32* %r, align 4
  %xor77 = xor i32 %74, %73
  store i32 %xor77, i32* %r, align 4
  %75 = load i32*, i32** %s, align 4
  %76 = load i32, i32* %l, align 4
  %shr78 = lshr i32 %76, 24
  %arrayidx79 = getelementptr inbounds i32, i32* %75, i32 %shr78
  %77 = load i32, i32* %arrayidx79, align 4
  %78 = load i32*, i32** %s, align 4
  %79 = load i32, i32* %l, align 4
  %shr80 = lshr i32 %79, 16
  %and81 = and i32 %shr80, 255
  %add82 = add i32 256, %and81
  %arrayidx83 = getelementptr inbounds i32, i32* %78, i32 %add82
  %80 = load i32, i32* %arrayidx83, align 4
  %add84 = add i32 %77, %80
  %81 = load i32*, i32** %s, align 4
  %82 = load i32, i32* %l, align 4
  %shr85 = lshr i32 %82, 8
  %and86 = and i32 %shr85, 255
  %add87 = add i32 512, %and86
  %arrayidx88 = getelementptr inbounds i32, i32* %81, i32 %add87
  %83 = load i32, i32* %arrayidx88, align 4
  %xor89 = xor i32 %add84, %83
  %84 = load i32*, i32** %s, align 4
  %85 = load i32, i32* %l, align 4
  %and90 = and i32 %85, 255
  %add91 = add i32 768, %and90
  %arrayidx92 = getelementptr inbounds i32, i32* %84, i32 %add91
  %86 = load i32, i32* %arrayidx92, align 4
  %add93 = add i32 %xor89, %86
  %87 = load i32, i32* %r, align 4
  %xor94 = xor i32 %87, %add93
  store i32 %xor94, i32* %r, align 4
  %88 = load i32*, i32** %p, align 4
  %arrayidx95 = getelementptr inbounds i32, i32* %88, i32 6
  %89 = load i32, i32* %arrayidx95, align 4
  %90 = load i32, i32* %l, align 4
  %xor96 = xor i32 %90, %89
  store i32 %xor96, i32* %l, align 4
  %91 = load i32*, i32** %s, align 4
  %92 = load i32, i32* %r, align 4
  %shr97 = lshr i32 %92, 24
  %arrayidx98 = getelementptr inbounds i32, i32* %91, i32 %shr97
  %93 = load i32, i32* %arrayidx98, align 4
  %94 = load i32*, i32** %s, align 4
  %95 = load i32, i32* %r, align 4
  %shr99 = lshr i32 %95, 16
  %and100 = and i32 %shr99, 255
  %add101 = add i32 256, %and100
  %arrayidx102 = getelementptr inbounds i32, i32* %94, i32 %add101
  %96 = load i32, i32* %arrayidx102, align 4
  %add103 = add i32 %93, %96
  %97 = load i32*, i32** %s, align 4
  %98 = load i32, i32* %r, align 4
  %shr104 = lshr i32 %98, 8
  %and105 = and i32 %shr104, 255
  %add106 = add i32 512, %and105
  %arrayidx107 = getelementptr inbounds i32, i32* %97, i32 %add106
  %99 = load i32, i32* %arrayidx107, align 4
  %xor108 = xor i32 %add103, %99
  %100 = load i32*, i32** %s, align 4
  %101 = load i32, i32* %r, align 4
  %and109 = and i32 %101, 255
  %add110 = add i32 768, %and109
  %arrayidx111 = getelementptr inbounds i32, i32* %100, i32 %add110
  %102 = load i32, i32* %arrayidx111, align 4
  %add112 = add i32 %xor108, %102
  %103 = load i32, i32* %l, align 4
  %xor113 = xor i32 %103, %add112
  store i32 %xor113, i32* %l, align 4
  %104 = load i32*, i32** %p, align 4
  %arrayidx114 = getelementptr inbounds i32, i32* %104, i32 7
  %105 = load i32, i32* %arrayidx114, align 4
  %106 = load i32, i32* %r, align 4
  %xor115 = xor i32 %106, %105
  store i32 %xor115, i32* %r, align 4
  %107 = load i32*, i32** %s, align 4
  %108 = load i32, i32* %l, align 4
  %shr116 = lshr i32 %108, 24
  %arrayidx117 = getelementptr inbounds i32, i32* %107, i32 %shr116
  %109 = load i32, i32* %arrayidx117, align 4
  %110 = load i32*, i32** %s, align 4
  %111 = load i32, i32* %l, align 4
  %shr118 = lshr i32 %111, 16
  %and119 = and i32 %shr118, 255
  %add120 = add i32 256, %and119
  %arrayidx121 = getelementptr inbounds i32, i32* %110, i32 %add120
  %112 = load i32, i32* %arrayidx121, align 4
  %add122 = add i32 %109, %112
  %113 = load i32*, i32** %s, align 4
  %114 = load i32, i32* %l, align 4
  %shr123 = lshr i32 %114, 8
  %and124 = and i32 %shr123, 255
  %add125 = add i32 512, %and124
  %arrayidx126 = getelementptr inbounds i32, i32* %113, i32 %add125
  %115 = load i32, i32* %arrayidx126, align 4
  %xor127 = xor i32 %add122, %115
  %116 = load i32*, i32** %s, align 4
  %117 = load i32, i32* %l, align 4
  %and128 = and i32 %117, 255
  %add129 = add i32 768, %and128
  %arrayidx130 = getelementptr inbounds i32, i32* %116, i32 %add129
  %118 = load i32, i32* %arrayidx130, align 4
  %add131 = add i32 %xor127, %118
  %119 = load i32, i32* %r, align 4
  %xor132 = xor i32 %119, %add131
  store i32 %xor132, i32* %r, align 4
  %120 = load i32*, i32** %p, align 4
  %arrayidx133 = getelementptr inbounds i32, i32* %120, i32 8
  %121 = load i32, i32* %arrayidx133, align 4
  %122 = load i32, i32* %l, align 4
  %xor134 = xor i32 %122, %121
  store i32 %xor134, i32* %l, align 4
  %123 = load i32*, i32** %s, align 4
  %124 = load i32, i32* %r, align 4
  %shr135 = lshr i32 %124, 24
  %arrayidx136 = getelementptr inbounds i32, i32* %123, i32 %shr135
  %125 = load i32, i32* %arrayidx136, align 4
  %126 = load i32*, i32** %s, align 4
  %127 = load i32, i32* %r, align 4
  %shr137 = lshr i32 %127, 16
  %and138 = and i32 %shr137, 255
  %add139 = add i32 256, %and138
  %arrayidx140 = getelementptr inbounds i32, i32* %126, i32 %add139
  %128 = load i32, i32* %arrayidx140, align 4
  %add141 = add i32 %125, %128
  %129 = load i32*, i32** %s, align 4
  %130 = load i32, i32* %r, align 4
  %shr142 = lshr i32 %130, 8
  %and143 = and i32 %shr142, 255
  %add144 = add i32 512, %and143
  %arrayidx145 = getelementptr inbounds i32, i32* %129, i32 %add144
  %131 = load i32, i32* %arrayidx145, align 4
  %xor146 = xor i32 %add141, %131
  %132 = load i32*, i32** %s, align 4
  %133 = load i32, i32* %r, align 4
  %and147 = and i32 %133, 255
  %add148 = add i32 768, %and147
  %arrayidx149 = getelementptr inbounds i32, i32* %132, i32 %add148
  %134 = load i32, i32* %arrayidx149, align 4
  %add150 = add i32 %xor146, %134
  %135 = load i32, i32* %l, align 4
  %xor151 = xor i32 %135, %add150
  store i32 %xor151, i32* %l, align 4
  %136 = load i32*, i32** %p, align 4
  %arrayidx152 = getelementptr inbounds i32, i32* %136, i32 9
  %137 = load i32, i32* %arrayidx152, align 4
  %138 = load i32, i32* %r, align 4
  %xor153 = xor i32 %138, %137
  store i32 %xor153, i32* %r, align 4
  %139 = load i32*, i32** %s, align 4
  %140 = load i32, i32* %l, align 4
  %shr154 = lshr i32 %140, 24
  %arrayidx155 = getelementptr inbounds i32, i32* %139, i32 %shr154
  %141 = load i32, i32* %arrayidx155, align 4
  %142 = load i32*, i32** %s, align 4
  %143 = load i32, i32* %l, align 4
  %shr156 = lshr i32 %143, 16
  %and157 = and i32 %shr156, 255
  %add158 = add i32 256, %and157
  %arrayidx159 = getelementptr inbounds i32, i32* %142, i32 %add158
  %144 = load i32, i32* %arrayidx159, align 4
  %add160 = add i32 %141, %144
  %145 = load i32*, i32** %s, align 4
  %146 = load i32, i32* %l, align 4
  %shr161 = lshr i32 %146, 8
  %and162 = and i32 %shr161, 255
  %add163 = add i32 512, %and162
  %arrayidx164 = getelementptr inbounds i32, i32* %145, i32 %add163
  %147 = load i32, i32* %arrayidx164, align 4
  %xor165 = xor i32 %add160, %147
  %148 = load i32*, i32** %s, align 4
  %149 = load i32, i32* %l, align 4
  %and166 = and i32 %149, 255
  %add167 = add i32 768, %and166
  %arrayidx168 = getelementptr inbounds i32, i32* %148, i32 %add167
  %150 = load i32, i32* %arrayidx168, align 4
  %add169 = add i32 %xor165, %150
  %151 = load i32, i32* %r, align 4
  %xor170 = xor i32 %151, %add169
  store i32 %xor170, i32* %r, align 4
  %152 = load i32*, i32** %p, align 4
  %arrayidx171 = getelementptr inbounds i32, i32* %152, i32 10
  %153 = load i32, i32* %arrayidx171, align 4
  %154 = load i32, i32* %l, align 4
  %xor172 = xor i32 %154, %153
  store i32 %xor172, i32* %l, align 4
  %155 = load i32*, i32** %s, align 4
  %156 = load i32, i32* %r, align 4
  %shr173 = lshr i32 %156, 24
  %arrayidx174 = getelementptr inbounds i32, i32* %155, i32 %shr173
  %157 = load i32, i32* %arrayidx174, align 4
  %158 = load i32*, i32** %s, align 4
  %159 = load i32, i32* %r, align 4
  %shr175 = lshr i32 %159, 16
  %and176 = and i32 %shr175, 255
  %add177 = add i32 256, %and176
  %arrayidx178 = getelementptr inbounds i32, i32* %158, i32 %add177
  %160 = load i32, i32* %arrayidx178, align 4
  %add179 = add i32 %157, %160
  %161 = load i32*, i32** %s, align 4
  %162 = load i32, i32* %r, align 4
  %shr180 = lshr i32 %162, 8
  %and181 = and i32 %shr180, 255
  %add182 = add i32 512, %and181
  %arrayidx183 = getelementptr inbounds i32, i32* %161, i32 %add182
  %163 = load i32, i32* %arrayidx183, align 4
  %xor184 = xor i32 %add179, %163
  %164 = load i32*, i32** %s, align 4
  %165 = load i32, i32* %r, align 4
  %and185 = and i32 %165, 255
  %add186 = add i32 768, %and185
  %arrayidx187 = getelementptr inbounds i32, i32* %164, i32 %add186
  %166 = load i32, i32* %arrayidx187, align 4
  %add188 = add i32 %xor184, %166
  %167 = load i32, i32* %l, align 4
  %xor189 = xor i32 %167, %add188
  store i32 %xor189, i32* %l, align 4
  %168 = load i32*, i32** %p, align 4
  %arrayidx190 = getelementptr inbounds i32, i32* %168, i32 11
  %169 = load i32, i32* %arrayidx190, align 4
  %170 = load i32, i32* %r, align 4
  %xor191 = xor i32 %170, %169
  store i32 %xor191, i32* %r, align 4
  %171 = load i32*, i32** %s, align 4
  %172 = load i32, i32* %l, align 4
  %shr192 = lshr i32 %172, 24
  %arrayidx193 = getelementptr inbounds i32, i32* %171, i32 %shr192
  %173 = load i32, i32* %arrayidx193, align 4
  %174 = load i32*, i32** %s, align 4
  %175 = load i32, i32* %l, align 4
  %shr194 = lshr i32 %175, 16
  %and195 = and i32 %shr194, 255
  %add196 = add i32 256, %and195
  %arrayidx197 = getelementptr inbounds i32, i32* %174, i32 %add196
  %176 = load i32, i32* %arrayidx197, align 4
  %add198 = add i32 %173, %176
  %177 = load i32*, i32** %s, align 4
  %178 = load i32, i32* %l, align 4
  %shr199 = lshr i32 %178, 8
  %and200 = and i32 %shr199, 255
  %add201 = add i32 512, %and200
  %arrayidx202 = getelementptr inbounds i32, i32* %177, i32 %add201
  %179 = load i32, i32* %arrayidx202, align 4
  %xor203 = xor i32 %add198, %179
  %180 = load i32*, i32** %s, align 4
  %181 = load i32, i32* %l, align 4
  %and204 = and i32 %181, 255
  %add205 = add i32 768, %and204
  %arrayidx206 = getelementptr inbounds i32, i32* %180, i32 %add205
  %182 = load i32, i32* %arrayidx206, align 4
  %add207 = add i32 %xor203, %182
  %183 = load i32, i32* %r, align 4
  %xor208 = xor i32 %183, %add207
  store i32 %xor208, i32* %r, align 4
  %184 = load i32*, i32** %p, align 4
  %arrayidx209 = getelementptr inbounds i32, i32* %184, i32 12
  %185 = load i32, i32* %arrayidx209, align 4
  %186 = load i32, i32* %l, align 4
  %xor210 = xor i32 %186, %185
  store i32 %xor210, i32* %l, align 4
  %187 = load i32*, i32** %s, align 4
  %188 = load i32, i32* %r, align 4
  %shr211 = lshr i32 %188, 24
  %arrayidx212 = getelementptr inbounds i32, i32* %187, i32 %shr211
  %189 = load i32, i32* %arrayidx212, align 4
  %190 = load i32*, i32** %s, align 4
  %191 = load i32, i32* %r, align 4
  %shr213 = lshr i32 %191, 16
  %and214 = and i32 %shr213, 255
  %add215 = add i32 256, %and214
  %arrayidx216 = getelementptr inbounds i32, i32* %190, i32 %add215
  %192 = load i32, i32* %arrayidx216, align 4
  %add217 = add i32 %189, %192
  %193 = load i32*, i32** %s, align 4
  %194 = load i32, i32* %r, align 4
  %shr218 = lshr i32 %194, 8
  %and219 = and i32 %shr218, 255
  %add220 = add i32 512, %and219
  %arrayidx221 = getelementptr inbounds i32, i32* %193, i32 %add220
  %195 = load i32, i32* %arrayidx221, align 4
  %xor222 = xor i32 %add217, %195
  %196 = load i32*, i32** %s, align 4
  %197 = load i32, i32* %r, align 4
  %and223 = and i32 %197, 255
  %add224 = add i32 768, %and223
  %arrayidx225 = getelementptr inbounds i32, i32* %196, i32 %add224
  %198 = load i32, i32* %arrayidx225, align 4
  %add226 = add i32 %xor222, %198
  %199 = load i32, i32* %l, align 4
  %xor227 = xor i32 %199, %add226
  store i32 %xor227, i32* %l, align 4
  %200 = load i32*, i32** %p, align 4
  %arrayidx228 = getelementptr inbounds i32, i32* %200, i32 13
  %201 = load i32, i32* %arrayidx228, align 4
  %202 = load i32, i32* %r, align 4
  %xor229 = xor i32 %202, %201
  store i32 %xor229, i32* %r, align 4
  %203 = load i32*, i32** %s, align 4
  %204 = load i32, i32* %l, align 4
  %shr230 = lshr i32 %204, 24
  %arrayidx231 = getelementptr inbounds i32, i32* %203, i32 %shr230
  %205 = load i32, i32* %arrayidx231, align 4
  %206 = load i32*, i32** %s, align 4
  %207 = load i32, i32* %l, align 4
  %shr232 = lshr i32 %207, 16
  %and233 = and i32 %shr232, 255
  %add234 = add i32 256, %and233
  %arrayidx235 = getelementptr inbounds i32, i32* %206, i32 %add234
  %208 = load i32, i32* %arrayidx235, align 4
  %add236 = add i32 %205, %208
  %209 = load i32*, i32** %s, align 4
  %210 = load i32, i32* %l, align 4
  %shr237 = lshr i32 %210, 8
  %and238 = and i32 %shr237, 255
  %add239 = add i32 512, %and238
  %arrayidx240 = getelementptr inbounds i32, i32* %209, i32 %add239
  %211 = load i32, i32* %arrayidx240, align 4
  %xor241 = xor i32 %add236, %211
  %212 = load i32*, i32** %s, align 4
  %213 = load i32, i32* %l, align 4
  %and242 = and i32 %213, 255
  %add243 = add i32 768, %and242
  %arrayidx244 = getelementptr inbounds i32, i32* %212, i32 %add243
  %214 = load i32, i32* %arrayidx244, align 4
  %add245 = add i32 %xor241, %214
  %215 = load i32, i32* %r, align 4
  %xor246 = xor i32 %215, %add245
  store i32 %xor246, i32* %r, align 4
  %216 = load i32*, i32** %p, align 4
  %arrayidx247 = getelementptr inbounds i32, i32* %216, i32 14
  %217 = load i32, i32* %arrayidx247, align 4
  %218 = load i32, i32* %l, align 4
  %xor248 = xor i32 %218, %217
  store i32 %xor248, i32* %l, align 4
  %219 = load i32*, i32** %s, align 4
  %220 = load i32, i32* %r, align 4
  %shr249 = lshr i32 %220, 24
  %arrayidx250 = getelementptr inbounds i32, i32* %219, i32 %shr249
  %221 = load i32, i32* %arrayidx250, align 4
  %222 = load i32*, i32** %s, align 4
  %223 = load i32, i32* %r, align 4
  %shr251 = lshr i32 %223, 16
  %and252 = and i32 %shr251, 255
  %add253 = add i32 256, %and252
  %arrayidx254 = getelementptr inbounds i32, i32* %222, i32 %add253
  %224 = load i32, i32* %arrayidx254, align 4
  %add255 = add i32 %221, %224
  %225 = load i32*, i32** %s, align 4
  %226 = load i32, i32* %r, align 4
  %shr256 = lshr i32 %226, 8
  %and257 = and i32 %shr256, 255
  %add258 = add i32 512, %and257
  %arrayidx259 = getelementptr inbounds i32, i32* %225, i32 %add258
  %227 = load i32, i32* %arrayidx259, align 4
  %xor260 = xor i32 %add255, %227
  %228 = load i32*, i32** %s, align 4
  %229 = load i32, i32* %r, align 4
  %and261 = and i32 %229, 255
  %add262 = add i32 768, %and261
  %arrayidx263 = getelementptr inbounds i32, i32* %228, i32 %add262
  %230 = load i32, i32* %arrayidx263, align 4
  %add264 = add i32 %xor260, %230
  %231 = load i32, i32* %l, align 4
  %xor265 = xor i32 %231, %add264
  store i32 %xor265, i32* %l, align 4
  %232 = load i32*, i32** %p, align 4
  %arrayidx266 = getelementptr inbounds i32, i32* %232, i32 15
  %233 = load i32, i32* %arrayidx266, align 4
  %234 = load i32, i32* %r, align 4
  %xor267 = xor i32 %234, %233
  store i32 %xor267, i32* %r, align 4
  %235 = load i32*, i32** %s, align 4
  %236 = load i32, i32* %l, align 4
  %shr268 = lshr i32 %236, 24
  %arrayidx269 = getelementptr inbounds i32, i32* %235, i32 %shr268
  %237 = load i32, i32* %arrayidx269, align 4
  %238 = load i32*, i32** %s, align 4
  %239 = load i32, i32* %l, align 4
  %shr270 = lshr i32 %239, 16
  %and271 = and i32 %shr270, 255
  %add272 = add i32 256, %and271
  %arrayidx273 = getelementptr inbounds i32, i32* %238, i32 %add272
  %240 = load i32, i32* %arrayidx273, align 4
  %add274 = add i32 %237, %240
  %241 = load i32*, i32** %s, align 4
  %242 = load i32, i32* %l, align 4
  %shr275 = lshr i32 %242, 8
  %and276 = and i32 %shr275, 255
  %add277 = add i32 512, %and276
  %arrayidx278 = getelementptr inbounds i32, i32* %241, i32 %add277
  %243 = load i32, i32* %arrayidx278, align 4
  %xor279 = xor i32 %add274, %243
  %244 = load i32*, i32** %s, align 4
  %245 = load i32, i32* %l, align 4
  %and280 = and i32 %245, 255
  %add281 = add i32 768, %and280
  %arrayidx282 = getelementptr inbounds i32, i32* %244, i32 %add281
  %246 = load i32, i32* %arrayidx282, align 4
  %add283 = add i32 %xor279, %246
  %247 = load i32, i32* %r, align 4
  %xor284 = xor i32 %247, %add283
  store i32 %xor284, i32* %r, align 4
  %248 = load i32*, i32** %p, align 4
  %arrayidx285 = getelementptr inbounds i32, i32* %248, i32 16
  %249 = load i32, i32* %arrayidx285, align 4
  %250 = load i32, i32* %l, align 4
  %xor286 = xor i32 %250, %249
  store i32 %xor286, i32* %l, align 4
  %251 = load i32*, i32** %s, align 4
  %252 = load i32, i32* %r, align 4
  %shr287 = lshr i32 %252, 24
  %arrayidx288 = getelementptr inbounds i32, i32* %251, i32 %shr287
  %253 = load i32, i32* %arrayidx288, align 4
  %254 = load i32*, i32** %s, align 4
  %255 = load i32, i32* %r, align 4
  %shr289 = lshr i32 %255, 16
  %and290 = and i32 %shr289, 255
  %add291 = add i32 256, %and290
  %arrayidx292 = getelementptr inbounds i32, i32* %254, i32 %add291
  %256 = load i32, i32* %arrayidx292, align 4
  %add293 = add i32 %253, %256
  %257 = load i32*, i32** %s, align 4
  %258 = load i32, i32* %r, align 4
  %shr294 = lshr i32 %258, 8
  %and295 = and i32 %shr294, 255
  %add296 = add i32 512, %and295
  %arrayidx297 = getelementptr inbounds i32, i32* %257, i32 %add296
  %259 = load i32, i32* %arrayidx297, align 4
  %xor298 = xor i32 %add293, %259
  %260 = load i32*, i32** %s, align 4
  %261 = load i32, i32* %r, align 4
  %and299 = and i32 %261, 255
  %add300 = add i32 768, %and299
  %arrayidx301 = getelementptr inbounds i32, i32* %260, i32 %add300
  %262 = load i32, i32* %arrayidx301, align 4
  %add302 = add i32 %xor298, %262
  %263 = load i32, i32* %l, align 4
  %xor303 = xor i32 %263, %add302
  store i32 %xor303, i32* %l, align 4
  %264 = load i32*, i32** %p, align 4
  %arrayidx304 = getelementptr inbounds i32, i32* %264, i32 17
  %265 = load i32, i32* %arrayidx304, align 4
  %266 = load i32, i32* %r, align 4
  %xor305 = xor i32 %266, %265
  store i32 %xor305, i32* %r, align 4
  br label %if.end

if.else:                                          ; preds = %entry
  %267 = load i32*, i32** %p, align 4
  %arrayidx306 = getelementptr inbounds i32, i32* %267, i32 17
  %268 = load i32, i32* %arrayidx306, align 4
  %269 = load i32, i32* %l, align 4
  %xor307 = xor i32 %269, %268
  store i32 %xor307, i32* %l, align 4
  %270 = load i32*, i32** %p, align 4
  %arrayidx308 = getelementptr inbounds i32, i32* %270, i32 16
  %271 = load i32, i32* %arrayidx308, align 4
  %272 = load i32, i32* %r, align 4
  %xor309 = xor i32 %272, %271
  store i32 %xor309, i32* %r, align 4
  %273 = load i32*, i32** %s, align 4
  %274 = load i32, i32* %l, align 4
  %shr310 = lshr i32 %274, 24
  %arrayidx311 = getelementptr inbounds i32, i32* %273, i32 %shr310
  %275 = load i32, i32* %arrayidx311, align 4
  %276 = load i32*, i32** %s, align 4
  %277 = load i32, i32* %l, align 4
  %shr312 = lshr i32 %277, 16
  %and313 = and i32 %shr312, 255
  %add314 = add i32 256, %and313
  %arrayidx315 = getelementptr inbounds i32, i32* %276, i32 %add314
  %278 = load i32, i32* %arrayidx315, align 4
  %add316 = add i32 %275, %278
  %279 = load i32*, i32** %s, align 4
  %280 = load i32, i32* %l, align 4
  %shr317 = lshr i32 %280, 8
  %and318 = and i32 %shr317, 255
  %add319 = add i32 512, %and318
  %arrayidx320 = getelementptr inbounds i32, i32* %279, i32 %add319
  %281 = load i32, i32* %arrayidx320, align 4
  %xor321 = xor i32 %add316, %281
  %282 = load i32*, i32** %s, align 4
  %283 = load i32, i32* %l, align 4
  %and322 = and i32 %283, 255
  %add323 = add i32 768, %and322
  %arrayidx324 = getelementptr inbounds i32, i32* %282, i32 %add323
  %284 = load i32, i32* %arrayidx324, align 4
  %add325 = add i32 %xor321, %284
  %285 = load i32, i32* %r, align 4
  %xor326 = xor i32 %285, %add325
  store i32 %xor326, i32* %r, align 4
  %286 = load i32*, i32** %p, align 4
  %arrayidx327 = getelementptr inbounds i32, i32* %286, i32 15
  %287 = load i32, i32* %arrayidx327, align 4
  %288 = load i32, i32* %l, align 4
  %xor328 = xor i32 %288, %287
  store i32 %xor328, i32* %l, align 4
  %289 = load i32*, i32** %s, align 4
  %290 = load i32, i32* %r, align 4
  %shr329 = lshr i32 %290, 24
  %arrayidx330 = getelementptr inbounds i32, i32* %289, i32 %shr329
  %291 = load i32, i32* %arrayidx330, align 4
  %292 = load i32*, i32** %s, align 4
  %293 = load i32, i32* %r, align 4
  %shr331 = lshr i32 %293, 16
  %and332 = and i32 %shr331, 255
  %add333 = add i32 256, %and332
  %arrayidx334 = getelementptr inbounds i32, i32* %292, i32 %add333
  %294 = load i32, i32* %arrayidx334, align 4
  %add335 = add i32 %291, %294
  %295 = load i32*, i32** %s, align 4
  %296 = load i32, i32* %r, align 4
  %shr336 = lshr i32 %296, 8
  %and337 = and i32 %shr336, 255
  %add338 = add i32 512, %and337
  %arrayidx339 = getelementptr inbounds i32, i32* %295, i32 %add338
  %297 = load i32, i32* %arrayidx339, align 4
  %xor340 = xor i32 %add335, %297
  %298 = load i32*, i32** %s, align 4
  %299 = load i32, i32* %r, align 4
  %and341 = and i32 %299, 255
  %add342 = add i32 768, %and341
  %arrayidx343 = getelementptr inbounds i32, i32* %298, i32 %add342
  %300 = load i32, i32* %arrayidx343, align 4
  %add344 = add i32 %xor340, %300
  %301 = load i32, i32* %l, align 4
  %xor345 = xor i32 %301, %add344
  store i32 %xor345, i32* %l, align 4
  %302 = load i32*, i32** %p, align 4
  %arrayidx346 = getelementptr inbounds i32, i32* %302, i32 14
  %303 = load i32, i32* %arrayidx346, align 4
  %304 = load i32, i32* %r, align 4
  %xor347 = xor i32 %304, %303
  store i32 %xor347, i32* %r, align 4
  %305 = load i32*, i32** %s, align 4
  %306 = load i32, i32* %l, align 4
  %shr348 = lshr i32 %306, 24
  %arrayidx349 = getelementptr inbounds i32, i32* %305, i32 %shr348
  %307 = load i32, i32* %arrayidx349, align 4
  %308 = load i32*, i32** %s, align 4
  %309 = load i32, i32* %l, align 4
  %shr350 = lshr i32 %309, 16
  %and351 = and i32 %shr350, 255
  %add352 = add i32 256, %and351
  %arrayidx353 = getelementptr inbounds i32, i32* %308, i32 %add352
  %310 = load i32, i32* %arrayidx353, align 4
  %add354 = add i32 %307, %310
  %311 = load i32*, i32** %s, align 4
  %312 = load i32, i32* %l, align 4
  %shr355 = lshr i32 %312, 8
  %and356 = and i32 %shr355, 255
  %add357 = add i32 512, %and356
  %arrayidx358 = getelementptr inbounds i32, i32* %311, i32 %add357
  %313 = load i32, i32* %arrayidx358, align 4
  %xor359 = xor i32 %add354, %313
  %314 = load i32*, i32** %s, align 4
  %315 = load i32, i32* %l, align 4
  %and360 = and i32 %315, 255
  %add361 = add i32 768, %and360
  %arrayidx362 = getelementptr inbounds i32, i32* %314, i32 %add361
  %316 = load i32, i32* %arrayidx362, align 4
  %add363 = add i32 %xor359, %316
  %317 = load i32, i32* %r, align 4
  %xor364 = xor i32 %317, %add363
  store i32 %xor364, i32* %r, align 4
  %318 = load i32*, i32** %p, align 4
  %arrayidx365 = getelementptr inbounds i32, i32* %318, i32 13
  %319 = load i32, i32* %arrayidx365, align 4
  %320 = load i32, i32* %l, align 4
  %xor366 = xor i32 %320, %319
  store i32 %xor366, i32* %l, align 4
  %321 = load i32*, i32** %s, align 4
  %322 = load i32, i32* %r, align 4
  %shr367 = lshr i32 %322, 24
  %arrayidx368 = getelementptr inbounds i32, i32* %321, i32 %shr367
  %323 = load i32, i32* %arrayidx368, align 4
  %324 = load i32*, i32** %s, align 4
  %325 = load i32, i32* %r, align 4
  %shr369 = lshr i32 %325, 16
  %and370 = and i32 %shr369, 255
  %add371 = add i32 256, %and370
  %arrayidx372 = getelementptr inbounds i32, i32* %324, i32 %add371
  %326 = load i32, i32* %arrayidx372, align 4
  %add373 = add i32 %323, %326
  %327 = load i32*, i32** %s, align 4
  %328 = load i32, i32* %r, align 4
  %shr374 = lshr i32 %328, 8
  %and375 = and i32 %shr374, 255
  %add376 = add i32 512, %and375
  %arrayidx377 = getelementptr inbounds i32, i32* %327, i32 %add376
  %329 = load i32, i32* %arrayidx377, align 4
  %xor378 = xor i32 %add373, %329
  %330 = load i32*, i32** %s, align 4
  %331 = load i32, i32* %r, align 4
  %and379 = and i32 %331, 255
  %add380 = add i32 768, %and379
  %arrayidx381 = getelementptr inbounds i32, i32* %330, i32 %add380
  %332 = load i32, i32* %arrayidx381, align 4
  %add382 = add i32 %xor378, %332
  %333 = load i32, i32* %l, align 4
  %xor383 = xor i32 %333, %add382
  store i32 %xor383, i32* %l, align 4
  %334 = load i32*, i32** %p, align 4
  %arrayidx384 = getelementptr inbounds i32, i32* %334, i32 12
  %335 = load i32, i32* %arrayidx384, align 4
  %336 = load i32, i32* %r, align 4
  %xor385 = xor i32 %336, %335
  store i32 %xor385, i32* %r, align 4
  %337 = load i32*, i32** %s, align 4
  %338 = load i32, i32* %l, align 4
  %shr386 = lshr i32 %338, 24
  %arrayidx387 = getelementptr inbounds i32, i32* %337, i32 %shr386
  %339 = load i32, i32* %arrayidx387, align 4
  %340 = load i32*, i32** %s, align 4
  %341 = load i32, i32* %l, align 4
  %shr388 = lshr i32 %341, 16
  %and389 = and i32 %shr388, 255
  %add390 = add i32 256, %and389
  %arrayidx391 = getelementptr inbounds i32, i32* %340, i32 %add390
  %342 = load i32, i32* %arrayidx391, align 4
  %add392 = add i32 %339, %342
  %343 = load i32*, i32** %s, align 4
  %344 = load i32, i32* %l, align 4
  %shr393 = lshr i32 %344, 8
  %and394 = and i32 %shr393, 255
  %add395 = add i32 512, %and394
  %arrayidx396 = getelementptr inbounds i32, i32* %343, i32 %add395
  %345 = load i32, i32* %arrayidx396, align 4
  %xor397 = xor i32 %add392, %345
  %346 = load i32*, i32** %s, align 4
  %347 = load i32, i32* %l, align 4
  %and398 = and i32 %347, 255
  %add399 = add i32 768, %and398
  %arrayidx400 = getelementptr inbounds i32, i32* %346, i32 %add399
  %348 = load i32, i32* %arrayidx400, align 4
  %add401 = add i32 %xor397, %348
  %349 = load i32, i32* %r, align 4
  %xor402 = xor i32 %349, %add401
  store i32 %xor402, i32* %r, align 4
  %350 = load i32*, i32** %p, align 4
  %arrayidx403 = getelementptr inbounds i32, i32* %350, i32 11
  %351 = load i32, i32* %arrayidx403, align 4
  %352 = load i32, i32* %l, align 4
  %xor404 = xor i32 %352, %351
  store i32 %xor404, i32* %l, align 4
  %353 = load i32*, i32** %s, align 4
  %354 = load i32, i32* %r, align 4
  %shr405 = lshr i32 %354, 24
  %arrayidx406 = getelementptr inbounds i32, i32* %353, i32 %shr405
  %355 = load i32, i32* %arrayidx406, align 4
  %356 = load i32*, i32** %s, align 4
  %357 = load i32, i32* %r, align 4
  %shr407 = lshr i32 %357, 16
  %and408 = and i32 %shr407, 255
  %add409 = add i32 256, %and408
  %arrayidx410 = getelementptr inbounds i32, i32* %356, i32 %add409
  %358 = load i32, i32* %arrayidx410, align 4
  %add411 = add i32 %355, %358
  %359 = load i32*, i32** %s, align 4
  %360 = load i32, i32* %r, align 4
  %shr412 = lshr i32 %360, 8
  %and413 = and i32 %shr412, 255
  %add414 = add i32 512, %and413
  %arrayidx415 = getelementptr inbounds i32, i32* %359, i32 %add414
  %361 = load i32, i32* %arrayidx415, align 4
  %xor416 = xor i32 %add411, %361
  %362 = load i32*, i32** %s, align 4
  %363 = load i32, i32* %r, align 4
  %and417 = and i32 %363, 255
  %add418 = add i32 768, %and417
  %arrayidx419 = getelementptr inbounds i32, i32* %362, i32 %add418
  %364 = load i32, i32* %arrayidx419, align 4
  %add420 = add i32 %xor416, %364
  %365 = load i32, i32* %l, align 4
  %xor421 = xor i32 %365, %add420
  store i32 %xor421, i32* %l, align 4
  %366 = load i32*, i32** %p, align 4
  %arrayidx422 = getelementptr inbounds i32, i32* %366, i32 10
  %367 = load i32, i32* %arrayidx422, align 4
  %368 = load i32, i32* %r, align 4
  %xor423 = xor i32 %368, %367
  store i32 %xor423, i32* %r, align 4
  %369 = load i32*, i32** %s, align 4
  %370 = load i32, i32* %l, align 4
  %shr424 = lshr i32 %370, 24
  %arrayidx425 = getelementptr inbounds i32, i32* %369, i32 %shr424
  %371 = load i32, i32* %arrayidx425, align 4
  %372 = load i32*, i32** %s, align 4
  %373 = load i32, i32* %l, align 4
  %shr426 = lshr i32 %373, 16
  %and427 = and i32 %shr426, 255
  %add428 = add i32 256, %and427
  %arrayidx429 = getelementptr inbounds i32, i32* %372, i32 %add428
  %374 = load i32, i32* %arrayidx429, align 4
  %add430 = add i32 %371, %374
  %375 = load i32*, i32** %s, align 4
  %376 = load i32, i32* %l, align 4
  %shr431 = lshr i32 %376, 8
  %and432 = and i32 %shr431, 255
  %add433 = add i32 512, %and432
  %arrayidx434 = getelementptr inbounds i32, i32* %375, i32 %add433
  %377 = load i32, i32* %arrayidx434, align 4
  %xor435 = xor i32 %add430, %377
  %378 = load i32*, i32** %s, align 4
  %379 = load i32, i32* %l, align 4
  %and436 = and i32 %379, 255
  %add437 = add i32 768, %and436
  %arrayidx438 = getelementptr inbounds i32, i32* %378, i32 %add437
  %380 = load i32, i32* %arrayidx438, align 4
  %add439 = add i32 %xor435, %380
  %381 = load i32, i32* %r, align 4
  %xor440 = xor i32 %381, %add439
  store i32 %xor440, i32* %r, align 4
  %382 = load i32*, i32** %p, align 4
  %arrayidx441 = getelementptr inbounds i32, i32* %382, i32 9
  %383 = load i32, i32* %arrayidx441, align 4
  %384 = load i32, i32* %l, align 4
  %xor442 = xor i32 %384, %383
  store i32 %xor442, i32* %l, align 4
  %385 = load i32*, i32** %s, align 4
  %386 = load i32, i32* %r, align 4
  %shr443 = lshr i32 %386, 24
  %arrayidx444 = getelementptr inbounds i32, i32* %385, i32 %shr443
  %387 = load i32, i32* %arrayidx444, align 4
  %388 = load i32*, i32** %s, align 4
  %389 = load i32, i32* %r, align 4
  %shr445 = lshr i32 %389, 16
  %and446 = and i32 %shr445, 255
  %add447 = add i32 256, %and446
  %arrayidx448 = getelementptr inbounds i32, i32* %388, i32 %add447
  %390 = load i32, i32* %arrayidx448, align 4
  %add449 = add i32 %387, %390
  %391 = load i32*, i32** %s, align 4
  %392 = load i32, i32* %r, align 4
  %shr450 = lshr i32 %392, 8
  %and451 = and i32 %shr450, 255
  %add452 = add i32 512, %and451
  %arrayidx453 = getelementptr inbounds i32, i32* %391, i32 %add452
  %393 = load i32, i32* %arrayidx453, align 4
  %xor454 = xor i32 %add449, %393
  %394 = load i32*, i32** %s, align 4
  %395 = load i32, i32* %r, align 4
  %and455 = and i32 %395, 255
  %add456 = add i32 768, %and455
  %arrayidx457 = getelementptr inbounds i32, i32* %394, i32 %add456
  %396 = load i32, i32* %arrayidx457, align 4
  %add458 = add i32 %xor454, %396
  %397 = load i32, i32* %l, align 4
  %xor459 = xor i32 %397, %add458
  store i32 %xor459, i32* %l, align 4
  %398 = load i32*, i32** %p, align 4
  %arrayidx460 = getelementptr inbounds i32, i32* %398, i32 8
  %399 = load i32, i32* %arrayidx460, align 4
  %400 = load i32, i32* %r, align 4
  %xor461 = xor i32 %400, %399
  store i32 %xor461, i32* %r, align 4
  %401 = load i32*, i32** %s, align 4
  %402 = load i32, i32* %l, align 4
  %shr462 = lshr i32 %402, 24
  %arrayidx463 = getelementptr inbounds i32, i32* %401, i32 %shr462
  %403 = load i32, i32* %arrayidx463, align 4
  %404 = load i32*, i32** %s, align 4
  %405 = load i32, i32* %l, align 4
  %shr464 = lshr i32 %405, 16
  %and465 = and i32 %shr464, 255
  %add466 = add i32 256, %and465
  %arrayidx467 = getelementptr inbounds i32, i32* %404, i32 %add466
  %406 = load i32, i32* %arrayidx467, align 4
  %add468 = add i32 %403, %406
  %407 = load i32*, i32** %s, align 4
  %408 = load i32, i32* %l, align 4
  %shr469 = lshr i32 %408, 8
  %and470 = and i32 %shr469, 255
  %add471 = add i32 512, %and470
  %arrayidx472 = getelementptr inbounds i32, i32* %407, i32 %add471
  %409 = load i32, i32* %arrayidx472, align 4
  %xor473 = xor i32 %add468, %409
  %410 = load i32*, i32** %s, align 4
  %411 = load i32, i32* %l, align 4
  %and474 = and i32 %411, 255
  %add475 = add i32 768, %and474
  %arrayidx476 = getelementptr inbounds i32, i32* %410, i32 %add475
  %412 = load i32, i32* %arrayidx476, align 4
  %add477 = add i32 %xor473, %412
  %413 = load i32, i32* %r, align 4
  %xor478 = xor i32 %413, %add477
  store i32 %xor478, i32* %r, align 4
  %414 = load i32*, i32** %p, align 4
  %arrayidx479 = getelementptr inbounds i32, i32* %414, i32 7
  %415 = load i32, i32* %arrayidx479, align 4
  %416 = load i32, i32* %l, align 4
  %xor480 = xor i32 %416, %415
  store i32 %xor480, i32* %l, align 4
  %417 = load i32*, i32** %s, align 4
  %418 = load i32, i32* %r, align 4
  %shr481 = lshr i32 %418, 24
  %arrayidx482 = getelementptr inbounds i32, i32* %417, i32 %shr481
  %419 = load i32, i32* %arrayidx482, align 4
  %420 = load i32*, i32** %s, align 4
  %421 = load i32, i32* %r, align 4
  %shr483 = lshr i32 %421, 16
  %and484 = and i32 %shr483, 255
  %add485 = add i32 256, %and484
  %arrayidx486 = getelementptr inbounds i32, i32* %420, i32 %add485
  %422 = load i32, i32* %arrayidx486, align 4
  %add487 = add i32 %419, %422
  %423 = load i32*, i32** %s, align 4
  %424 = load i32, i32* %r, align 4
  %shr488 = lshr i32 %424, 8
  %and489 = and i32 %shr488, 255
  %add490 = add i32 512, %and489
  %arrayidx491 = getelementptr inbounds i32, i32* %423, i32 %add490
  %425 = load i32, i32* %arrayidx491, align 4
  %xor492 = xor i32 %add487, %425
  %426 = load i32*, i32** %s, align 4
  %427 = load i32, i32* %r, align 4
  %and493 = and i32 %427, 255
  %add494 = add i32 768, %and493
  %arrayidx495 = getelementptr inbounds i32, i32* %426, i32 %add494
  %428 = load i32, i32* %arrayidx495, align 4
  %add496 = add i32 %xor492, %428
  %429 = load i32, i32* %l, align 4
  %xor497 = xor i32 %429, %add496
  store i32 %xor497, i32* %l, align 4
  %430 = load i32*, i32** %p, align 4
  %arrayidx498 = getelementptr inbounds i32, i32* %430, i32 6
  %431 = load i32, i32* %arrayidx498, align 4
  %432 = load i32, i32* %r, align 4
  %xor499 = xor i32 %432, %431
  store i32 %xor499, i32* %r, align 4
  %433 = load i32*, i32** %s, align 4
  %434 = load i32, i32* %l, align 4
  %shr500 = lshr i32 %434, 24
  %arrayidx501 = getelementptr inbounds i32, i32* %433, i32 %shr500
  %435 = load i32, i32* %arrayidx501, align 4
  %436 = load i32*, i32** %s, align 4
  %437 = load i32, i32* %l, align 4
  %shr502 = lshr i32 %437, 16
  %and503 = and i32 %shr502, 255
  %add504 = add i32 256, %and503
  %arrayidx505 = getelementptr inbounds i32, i32* %436, i32 %add504
  %438 = load i32, i32* %arrayidx505, align 4
  %add506 = add i32 %435, %438
  %439 = load i32*, i32** %s, align 4
  %440 = load i32, i32* %l, align 4
  %shr507 = lshr i32 %440, 8
  %and508 = and i32 %shr507, 255
  %add509 = add i32 512, %and508
  %arrayidx510 = getelementptr inbounds i32, i32* %439, i32 %add509
  %441 = load i32, i32* %arrayidx510, align 4
  %xor511 = xor i32 %add506, %441
  %442 = load i32*, i32** %s, align 4
  %443 = load i32, i32* %l, align 4
  %and512 = and i32 %443, 255
  %add513 = add i32 768, %and512
  %arrayidx514 = getelementptr inbounds i32, i32* %442, i32 %add513
  %444 = load i32, i32* %arrayidx514, align 4
  %add515 = add i32 %xor511, %444
  %445 = load i32, i32* %r, align 4
  %xor516 = xor i32 %445, %add515
  store i32 %xor516, i32* %r, align 4
  %446 = load i32*, i32** %p, align 4
  %arrayidx517 = getelementptr inbounds i32, i32* %446, i32 5
  %447 = load i32, i32* %arrayidx517, align 4
  %448 = load i32, i32* %l, align 4
  %xor518 = xor i32 %448, %447
  store i32 %xor518, i32* %l, align 4
  %449 = load i32*, i32** %s, align 4
  %450 = load i32, i32* %r, align 4
  %shr519 = lshr i32 %450, 24
  %arrayidx520 = getelementptr inbounds i32, i32* %449, i32 %shr519
  %451 = load i32, i32* %arrayidx520, align 4
  %452 = load i32*, i32** %s, align 4
  %453 = load i32, i32* %r, align 4
  %shr521 = lshr i32 %453, 16
  %and522 = and i32 %shr521, 255
  %add523 = add i32 256, %and522
  %arrayidx524 = getelementptr inbounds i32, i32* %452, i32 %add523
  %454 = load i32, i32* %arrayidx524, align 4
  %add525 = add i32 %451, %454
  %455 = load i32*, i32** %s, align 4
  %456 = load i32, i32* %r, align 4
  %shr526 = lshr i32 %456, 8
  %and527 = and i32 %shr526, 255
  %add528 = add i32 512, %and527
  %arrayidx529 = getelementptr inbounds i32, i32* %455, i32 %add528
  %457 = load i32, i32* %arrayidx529, align 4
  %xor530 = xor i32 %add525, %457
  %458 = load i32*, i32** %s, align 4
  %459 = load i32, i32* %r, align 4
  %and531 = and i32 %459, 255
  %add532 = add i32 768, %and531
  %arrayidx533 = getelementptr inbounds i32, i32* %458, i32 %add532
  %460 = load i32, i32* %arrayidx533, align 4
  %add534 = add i32 %xor530, %460
  %461 = load i32, i32* %l, align 4
  %xor535 = xor i32 %461, %add534
  store i32 %xor535, i32* %l, align 4
  %462 = load i32*, i32** %p, align 4
  %arrayidx536 = getelementptr inbounds i32, i32* %462, i32 4
  %463 = load i32, i32* %arrayidx536, align 4
  %464 = load i32, i32* %r, align 4
  %xor537 = xor i32 %464, %463
  store i32 %xor537, i32* %r, align 4
  %465 = load i32*, i32** %s, align 4
  %466 = load i32, i32* %l, align 4
  %shr538 = lshr i32 %466, 24
  %arrayidx539 = getelementptr inbounds i32, i32* %465, i32 %shr538
  %467 = load i32, i32* %arrayidx539, align 4
  %468 = load i32*, i32** %s, align 4
  %469 = load i32, i32* %l, align 4
  %shr540 = lshr i32 %469, 16
  %and541 = and i32 %shr540, 255
  %add542 = add i32 256, %and541
  %arrayidx543 = getelementptr inbounds i32, i32* %468, i32 %add542
  %470 = load i32, i32* %arrayidx543, align 4
  %add544 = add i32 %467, %470
  %471 = load i32*, i32** %s, align 4
  %472 = load i32, i32* %l, align 4
  %shr545 = lshr i32 %472, 8
  %and546 = and i32 %shr545, 255
  %add547 = add i32 512, %and546
  %arrayidx548 = getelementptr inbounds i32, i32* %471, i32 %add547
  %473 = load i32, i32* %arrayidx548, align 4
  %xor549 = xor i32 %add544, %473
  %474 = load i32*, i32** %s, align 4
  %475 = load i32, i32* %l, align 4
  %and550 = and i32 %475, 255
  %add551 = add i32 768, %and550
  %arrayidx552 = getelementptr inbounds i32, i32* %474, i32 %add551
  %476 = load i32, i32* %arrayidx552, align 4
  %add553 = add i32 %xor549, %476
  %477 = load i32, i32* %r, align 4
  %xor554 = xor i32 %477, %add553
  store i32 %xor554, i32* %r, align 4
  %478 = load i32*, i32** %p, align 4
  %arrayidx555 = getelementptr inbounds i32, i32* %478, i32 3
  %479 = load i32, i32* %arrayidx555, align 4
  %480 = load i32, i32* %l, align 4
  %xor556 = xor i32 %480, %479
  store i32 %xor556, i32* %l, align 4
  %481 = load i32*, i32** %s, align 4
  %482 = load i32, i32* %r, align 4
  %shr557 = lshr i32 %482, 24
  %arrayidx558 = getelementptr inbounds i32, i32* %481, i32 %shr557
  %483 = load i32, i32* %arrayidx558, align 4
  %484 = load i32*, i32** %s, align 4
  %485 = load i32, i32* %r, align 4
  %shr559 = lshr i32 %485, 16
  %and560 = and i32 %shr559, 255
  %add561 = add i32 256, %and560
  %arrayidx562 = getelementptr inbounds i32, i32* %484, i32 %add561
  %486 = load i32, i32* %arrayidx562, align 4
  %add563 = add i32 %483, %486
  %487 = load i32*, i32** %s, align 4
  %488 = load i32, i32* %r, align 4
  %shr564 = lshr i32 %488, 8
  %and565 = and i32 %shr564, 255
  %add566 = add i32 512, %and565
  %arrayidx567 = getelementptr inbounds i32, i32* %487, i32 %add566
  %489 = load i32, i32* %arrayidx567, align 4
  %xor568 = xor i32 %add563, %489
  %490 = load i32*, i32** %s, align 4
  %491 = load i32, i32* %r, align 4
  %and569 = and i32 %491, 255
  %add570 = add i32 768, %and569
  %arrayidx571 = getelementptr inbounds i32, i32* %490, i32 %add570
  %492 = load i32, i32* %arrayidx571, align 4
  %add572 = add i32 %xor568, %492
  %493 = load i32, i32* %l, align 4
  %xor573 = xor i32 %493, %add572
  store i32 %xor573, i32* %l, align 4
  %494 = load i32*, i32** %p, align 4
  %arrayidx574 = getelementptr inbounds i32, i32* %494, i32 2
  %495 = load i32, i32* %arrayidx574, align 4
  %496 = load i32, i32* %r, align 4
  %xor575 = xor i32 %496, %495
  store i32 %xor575, i32* %r, align 4
  %497 = load i32*, i32** %s, align 4
  %498 = load i32, i32* %l, align 4
  %shr576 = lshr i32 %498, 24
  %arrayidx577 = getelementptr inbounds i32, i32* %497, i32 %shr576
  %499 = load i32, i32* %arrayidx577, align 4
  %500 = load i32*, i32** %s, align 4
  %501 = load i32, i32* %l, align 4
  %shr578 = lshr i32 %501, 16
  %and579 = and i32 %shr578, 255
  %add580 = add i32 256, %and579
  %arrayidx581 = getelementptr inbounds i32, i32* %500, i32 %add580
  %502 = load i32, i32* %arrayidx581, align 4
  %add582 = add i32 %499, %502
  %503 = load i32*, i32** %s, align 4
  %504 = load i32, i32* %l, align 4
  %shr583 = lshr i32 %504, 8
  %and584 = and i32 %shr583, 255
  %add585 = add i32 512, %and584
  %arrayidx586 = getelementptr inbounds i32, i32* %503, i32 %add585
  %505 = load i32, i32* %arrayidx586, align 4
  %xor587 = xor i32 %add582, %505
  %506 = load i32*, i32** %s, align 4
  %507 = load i32, i32* %l, align 4
  %and588 = and i32 %507, 255
  %add589 = add i32 768, %and588
  %arrayidx590 = getelementptr inbounds i32, i32* %506, i32 %add589
  %508 = load i32, i32* %arrayidx590, align 4
  %add591 = add i32 %xor587, %508
  %509 = load i32, i32* %r, align 4
  %xor592 = xor i32 %509, %add591
  store i32 %xor592, i32* %r, align 4
  %510 = load i32*, i32** %p, align 4
  %arrayidx593 = getelementptr inbounds i32, i32* %510, i32 1
  %511 = load i32, i32* %arrayidx593, align 4
  %512 = load i32, i32* %l, align 4
  %xor594 = xor i32 %512, %511
  store i32 %xor594, i32* %l, align 4
  %513 = load i32*, i32** %s, align 4
  %514 = load i32, i32* %r, align 4
  %shr595 = lshr i32 %514, 24
  %arrayidx596 = getelementptr inbounds i32, i32* %513, i32 %shr595
  %515 = load i32, i32* %arrayidx596, align 4
  %516 = load i32*, i32** %s, align 4
  %517 = load i32, i32* %r, align 4
  %shr597 = lshr i32 %517, 16
  %and598 = and i32 %shr597, 255
  %add599 = add i32 256, %and598
  %arrayidx600 = getelementptr inbounds i32, i32* %516, i32 %add599
  %518 = load i32, i32* %arrayidx600, align 4
  %add601 = add i32 %515, %518
  %519 = load i32*, i32** %s, align 4
  %520 = load i32, i32* %r, align 4
  %shr602 = lshr i32 %520, 8
  %and603 = and i32 %shr602, 255
  %add604 = add i32 512, %and603
  %arrayidx605 = getelementptr inbounds i32, i32* %519, i32 %add604
  %521 = load i32, i32* %arrayidx605, align 4
  %xor606 = xor i32 %add601, %521
  %522 = load i32*, i32** %s, align 4
  %523 = load i32, i32* %r, align 4
  %and607 = and i32 %523, 255
  %add608 = add i32 768, %and607
  %arrayidx609 = getelementptr inbounds i32, i32* %522, i32 %add608
  %524 = load i32, i32* %arrayidx609, align 4
  %add610 = add i32 %xor606, %524
  %525 = load i32, i32* %l, align 4
  %xor611 = xor i32 %525, %add610
  store i32 %xor611, i32* %l, align 4
  %526 = load i32*, i32** %p, align 4
  %arrayidx612 = getelementptr inbounds i32, i32* %526, i32 0
  %527 = load i32, i32* %arrayidx612, align 4
  %528 = load i32, i32* %r, align 4
  %xor613 = xor i32 %528, %527
  store i32 %xor613, i32* %r, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %529 = load i32, i32* %l, align 4
  %530 = load i32*, i32** %data.addr, align 4
  %arrayidx614 = getelementptr inbounds i32, i32* %530, i32 1
  store i32 %529, i32* %arrayidx614, align 4
  %531 = load i32, i32* %r, align 4
  %532 = load i32*, i32** %data.addr, align 4
  %arrayidx615 = getelementptr inbounds i32, i32* %532, i32 0
  store i32 %531, i32* %arrayidx615, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp
define void @BF_cfb64_encrypt(i8* %in, i8* %out, i32 %length, i8* %ivec, i32* %num, i32 %encrypt) #0 {
entry:
  %in.addr = alloca i8*, align 4
  %out.addr = alloca i8*, align 4
  %length.addr = alloca i32, align 4
  %ivec.addr = alloca i8*, align 4
  %num.addr = alloca i32*, align 4
  %encrypt.addr = alloca i32, align 4
  %v0 = alloca i32, align 4
  %v1 = alloca i32, align 4
  %t = alloca i32, align 4
  %n = alloca i32, align 4
  %l = alloca i32, align 4
  %ti = alloca [2 x i32], align 4
  %iv = alloca i8*, align 4
  %c = alloca i8, align 1
  %cc = alloca i8, align 1
  store i8* %in, i8** %in.addr, align 4
  store i8* %out, i8** %out.addr, align 4
  store i32 %length, i32* %length.addr, align 4
  store i8* %ivec, i8** %ivec.addr, align 4
  store i32* %num, i32** %num.addr, align 4
  store i32 %encrypt, i32* %encrypt.addr, align 4
  %0 = load i32*, i32** %num.addr, align 4
  %1 = load i32, i32* %0, align 4
  store i32 %1, i32* %n, align 4
  %2 = load i32, i32* %length.addr, align 4
  store i32 %2, i32* %l, align 4
  %3 = load i8*, i8** %ivec.addr, align 4
  store i8* %3, i8** %iv, align 4
  %4 = load i32, i32* %encrypt.addr, align 4
  %tobool = icmp ne i32 %4, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  br label %while.cond

while.cond:                                       ; preds = %if.end, %if.then
  %5 = load i32, i32* %l, align 4
  %dec = add nsw i32 %5, -1
  store i32 %dec, i32* %l, align 4
  %tobool1 = icmp ne i32 %5, 0
  br i1 %tobool1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %6 = load i32, i32* %n, align 4
  %cmp = icmp eq i32 %6, 0
  br i1 %cmp, label %if.then2, label %if.end

if.then2:                                         ; preds = %while.body
  %7 = load i8*, i8** %iv, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1
  store i8* %incdec.ptr, i8** %iv, align 4
  %8 = load i8, i8* %7, align 1
  %conv = zext i8 %8 to i32
  %shl = shl i32 %conv, 24
  store i32 %shl, i32* %v0, align 4
  %9 = load i8*, i8** %iv, align 4
  %incdec.ptr3 = getelementptr inbounds i8, i8* %9, i32 1
  store i8* %incdec.ptr3, i8** %iv, align 4
  %10 = load i8, i8* %9, align 1
  %conv4 = zext i8 %10 to i32
  %shl5 = shl i32 %conv4, 16
  %11 = load i32, i32* %v0, align 4
  %or = or i32 %11, %shl5
  store i32 %or, i32* %v0, align 4
  %12 = load i8*, i8** %iv, align 4
  %incdec.ptr6 = getelementptr inbounds i8, i8* %12, i32 1
  store i8* %incdec.ptr6, i8** %iv, align 4
  %13 = load i8, i8* %12, align 1
  %conv7 = zext i8 %13 to i32
  %shl8 = shl i32 %conv7, 8
  %14 = load i32, i32* %v0, align 4
  %or9 = or i32 %14, %shl8
  store i32 %or9, i32* %v0, align 4
  %15 = load i8*, i8** %iv, align 4
  %incdec.ptr10 = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr10, i8** %iv, align 4
  %16 = load i8, i8* %15, align 1
  %conv11 = zext i8 %16 to i32
  %17 = load i32, i32* %v0, align 4
  %or12 = or i32 %17, %conv11
  store i32 %or12, i32* %v0, align 4
  %18 = load i32, i32* %v0, align 4
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %ti, i32 0, i32 0
  store i32 %18, i32* %arrayidx, align 4
  %19 = load i8*, i8** %iv, align 4
  %incdec.ptr13 = getelementptr inbounds i8, i8* %19, i32 1
  store i8* %incdec.ptr13, i8** %iv, align 4
  %20 = load i8, i8* %19, align 1
  %conv14 = zext i8 %20 to i32
  %shl15 = shl i32 %conv14, 24
  store i32 %shl15, i32* %v1, align 4
  %21 = load i8*, i8** %iv, align 4
  %incdec.ptr16 = getelementptr inbounds i8, i8* %21, i32 1
  store i8* %incdec.ptr16, i8** %iv, align 4
  %22 = load i8, i8* %21, align 1
  %conv17 = zext i8 %22 to i32
  %shl18 = shl i32 %conv17, 16
  %23 = load i32, i32* %v1, align 4
  %or19 = or i32 %23, %shl18
  store i32 %or19, i32* %v1, align 4
  %24 = load i8*, i8** %iv, align 4
  %incdec.ptr20 = getelementptr inbounds i8, i8* %24, i32 1
  store i8* %incdec.ptr20, i8** %iv, align 4
  %25 = load i8, i8* %24, align 1
  %conv21 = zext i8 %25 to i32
  %shl22 = shl i32 %conv21, 8
  %26 = load i32, i32* %v1, align 4
  %or23 = or i32 %26, %shl22
  store i32 %or23, i32* %v1, align 4
  %27 = load i8*, i8** %iv, align 4
  %incdec.ptr24 = getelementptr inbounds i8, i8* %27, i32 1
  store i8* %incdec.ptr24, i8** %iv, align 4
  %28 = load i8, i8* %27, align 1
  %conv25 = zext i8 %28 to i32
  %29 = load i32, i32* %v1, align 4
  %or26 = or i32 %29, %conv25
  store i32 %or26, i32* %v1, align 4
  %30 = load i32, i32* %v1, align 4
  %arrayidx27 = getelementptr inbounds [2 x i32], [2 x i32]* %ti, i32 0, i32 1
  store i32 %30, i32* %arrayidx27, align 4
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %ti, i32 0, i32 0
  call void @BF_encrypt(i32* %arraydecay, i32 1)
  %31 = load i8*, i8** %ivec.addr, align 4
  store i8* %31, i8** %iv, align 4
  %arrayidx28 = getelementptr inbounds [2 x i32], [2 x i32]* %ti, i32 0, i32 0
  %32 = load i32, i32* %arrayidx28, align 4
  store i32 %32, i32* %t, align 4
  %33 = load i32, i32* %t, align 4
  %shr = lshr i32 %33, 24
  %and = and i32 %shr, 255
  %conv29 = trunc i32 %and to i8
  %34 = load i8*, i8** %iv, align 4
  %incdec.ptr30 = getelementptr inbounds i8, i8* %34, i32 1
  store i8* %incdec.ptr30, i8** %iv, align 4
  store i8 %conv29, i8* %34, align 1
  %35 = load i32, i32* %t, align 4
  %shr31 = lshr i32 %35, 16
  %and32 = and i32 %shr31, 255
  %conv33 = trunc i32 %and32 to i8
  %36 = load i8*, i8** %iv, align 4
  %incdec.ptr34 = getelementptr inbounds i8, i8* %36, i32 1
  store i8* %incdec.ptr34, i8** %iv, align 4
  store i8 %conv33, i8* %36, align 1
  %37 = load i32, i32* %t, align 4
  %shr35 = lshr i32 %37, 8
  %and36 = and i32 %shr35, 255
  %conv37 = trunc i32 %and36 to i8
  %38 = load i8*, i8** %iv, align 4
  %incdec.ptr38 = getelementptr inbounds i8, i8* %38, i32 1
  store i8* %incdec.ptr38, i8** %iv, align 4
  store i8 %conv37, i8* %38, align 1
  %39 = load i32, i32* %t, align 4
  %and39 = and i32 %39, 255
  %conv40 = trunc i32 %and39 to i8
  %40 = load i8*, i8** %iv, align 4
  %incdec.ptr41 = getelementptr inbounds i8, i8* %40, i32 1
  store i8* %incdec.ptr41, i8** %iv, align 4
  store i8 %conv40, i8* %40, align 1
  %arrayidx42 = getelementptr inbounds [2 x i32], [2 x i32]* %ti, i32 0, i32 1
  %41 = load i32, i32* %arrayidx42, align 4
  store i32 %41, i32* %t, align 4
  %42 = load i32, i32* %t, align 4
  %shr43 = lshr i32 %42, 24
  %and44 = and i32 %shr43, 255
  %conv45 = trunc i32 %and44 to i8
  %43 = load i8*, i8** %iv, align 4
  %incdec.ptr46 = getelementptr inbounds i8, i8* %43, i32 1
  store i8* %incdec.ptr46, i8** %iv, align 4
  store i8 %conv45, i8* %43, align 1
  %44 = load i32, i32* %t, align 4
  %shr47 = lshr i32 %44, 16
  %and48 = and i32 %shr47, 255
  %conv49 = trunc i32 %and48 to i8
  %45 = load i8*, i8** %iv, align 4
  %incdec.ptr50 = getelementptr inbounds i8, i8* %45, i32 1
  store i8* %incdec.ptr50, i8** %iv, align 4
  store i8 %conv49, i8* %45, align 1
  %46 = load i32, i32* %t, align 4
  %shr51 = lshr i32 %46, 8
  %and52 = and i32 %shr51, 255
  %conv53 = trunc i32 %and52 to i8
  %47 = load i8*, i8** %iv, align 4
  %incdec.ptr54 = getelementptr inbounds i8, i8* %47, i32 1
  store i8* %incdec.ptr54, i8** %iv, align 4
  store i8 %conv53, i8* %47, align 1
  %48 = load i32, i32* %t, align 4
  %and55 = and i32 %48, 255
  %conv56 = trunc i32 %and55 to i8
  %49 = load i8*, i8** %iv, align 4
  %incdec.ptr57 = getelementptr inbounds i8, i8* %49, i32 1
  store i8* %incdec.ptr57, i8** %iv, align 4
  store i8 %conv56, i8* %49, align 1
  %50 = load i8*, i8** %ivec.addr, align 4
  store i8* %50, i8** %iv, align 4
  br label %if.end

if.end:                                           ; preds = %if.then2, %while.body
  %51 = load i8*, i8** %in.addr, align 4
  %incdec.ptr58 = getelementptr inbounds i8, i8* %51, i32 1
  store i8* %incdec.ptr58, i8** %in.addr, align 4
  %52 = load i8, i8* %51, align 1
  %conv59 = zext i8 %52 to i32
  %53 = load i8*, i8** %iv, align 4
  %54 = load i32, i32* %n, align 4
  %arrayidx60 = getelementptr inbounds i8, i8* %53, i32 %54
  %55 = load i8, i8* %arrayidx60, align 1
  %conv61 = zext i8 %55 to i32
  %xor = xor i32 %conv59, %conv61
  %conv62 = trunc i32 %xor to i8
  store i8 %conv62, i8* %c, align 1
  %56 = load i8, i8* %c, align 1
  %57 = load i8*, i8** %out.addr, align 4
  %incdec.ptr63 = getelementptr inbounds i8, i8* %57, i32 1
  store i8* %incdec.ptr63, i8** %out.addr, align 4
  store i8 %56, i8* %57, align 1
  %58 = load i8, i8* %c, align 1
  %59 = load i8*, i8** %iv, align 4
  %60 = load i32, i32* %n, align 4
  %arrayidx64 = getelementptr inbounds i8, i8* %59, i32 %60
  store i8 %58, i8* %arrayidx64, align 1
  %61 = load i32, i32* %n, align 4
  %add = add nsw i32 %61, 1
  %and65 = and i32 %add, 7
  store i32 %and65, i32* %n, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %if.end148

if.else:                                          ; preds = %entry
  br label %while.cond66

while.cond66:                                     ; preds = %if.end136, %if.else
  %62 = load i32, i32* %l, align 4
  %dec67 = add nsw i32 %62, -1
  store i32 %dec67, i32* %l, align 4
  %tobool68 = icmp ne i32 %62, 0
  br i1 %tobool68, label %while.body69, label %while.end147

while.body69:                                     ; preds = %while.cond66
  %63 = load i32, i32* %n, align 4
  %cmp70 = icmp eq i32 %63, 0
  br i1 %cmp70, label %if.then72, label %if.end136

if.then72:                                        ; preds = %while.body69
  %64 = load i8*, i8** %iv, align 4
  %incdec.ptr73 = getelementptr inbounds i8, i8* %64, i32 1
  store i8* %incdec.ptr73, i8** %iv, align 4
  %65 = load i8, i8* %64, align 1
  %conv74 = zext i8 %65 to i32
  %shl75 = shl i32 %conv74, 24
  store i32 %shl75, i32* %v0, align 4
  %66 = load i8*, i8** %iv, align 4
  %incdec.ptr76 = getelementptr inbounds i8, i8* %66, i32 1
  store i8* %incdec.ptr76, i8** %iv, align 4
  %67 = load i8, i8* %66, align 1
  %conv77 = zext i8 %67 to i32
  %shl78 = shl i32 %conv77, 16
  %68 = load i32, i32* %v0, align 4
  %or79 = or i32 %68, %shl78
  store i32 %or79, i32* %v0, align 4
  %69 = load i8*, i8** %iv, align 4
  %incdec.ptr80 = getelementptr inbounds i8, i8* %69, i32 1
  store i8* %incdec.ptr80, i8** %iv, align 4
  %70 = load i8, i8* %69, align 1
  %conv81 = zext i8 %70 to i32
  %shl82 = shl i32 %conv81, 8
  %71 = load i32, i32* %v0, align 4
  %or83 = or i32 %71, %shl82
  store i32 %or83, i32* %v0, align 4
  %72 = load i8*, i8** %iv, align 4
  %incdec.ptr84 = getelementptr inbounds i8, i8* %72, i32 1
  store i8* %incdec.ptr84, i8** %iv, align 4
  %73 = load i8, i8* %72, align 1
  %conv85 = zext i8 %73 to i32
  %74 = load i32, i32* %v0, align 4
  %or86 = or i32 %74, %conv85
  store i32 %or86, i32* %v0, align 4
  %75 = load i32, i32* %v0, align 4
  %arrayidx87 = getelementptr inbounds [2 x i32], [2 x i32]* %ti, i32 0, i32 0
  store i32 %75, i32* %arrayidx87, align 4
  %76 = load i8*, i8** %iv, align 4
  %incdec.ptr88 = getelementptr inbounds i8, i8* %76, i32 1
  store i8* %incdec.ptr88, i8** %iv, align 4
  %77 = load i8, i8* %76, align 1
  %conv89 = zext i8 %77 to i32
  %shl90 = shl i32 %conv89, 24
  store i32 %shl90, i32* %v1, align 4
  %78 = load i8*, i8** %iv, align 4
  %incdec.ptr91 = getelementptr inbounds i8, i8* %78, i32 1
  store i8* %incdec.ptr91, i8** %iv, align 4
  %79 = load i8, i8* %78, align 1
  %conv92 = zext i8 %79 to i32
  %shl93 = shl i32 %conv92, 16
  %80 = load i32, i32* %v1, align 4
  %or94 = or i32 %80, %shl93
  store i32 %or94, i32* %v1, align 4
  %81 = load i8*, i8** %iv, align 4
  %incdec.ptr95 = getelementptr inbounds i8, i8* %81, i32 1
  store i8* %incdec.ptr95, i8** %iv, align 4
  %82 = load i8, i8* %81, align 1
  %conv96 = zext i8 %82 to i32
  %shl97 = shl i32 %conv96, 8
  %83 = load i32, i32* %v1, align 4
  %or98 = or i32 %83, %shl97
  store i32 %or98, i32* %v1, align 4
  %84 = load i8*, i8** %iv, align 4
  %incdec.ptr99 = getelementptr inbounds i8, i8* %84, i32 1
  store i8* %incdec.ptr99, i8** %iv, align 4
  %85 = load i8, i8* %84, align 1
  %conv100 = zext i8 %85 to i32
  %86 = load i32, i32* %v1, align 4
  %or101 = or i32 %86, %conv100
  store i32 %or101, i32* %v1, align 4
  %87 = load i32, i32* %v1, align 4
  %arrayidx102 = getelementptr inbounds [2 x i32], [2 x i32]* %ti, i32 0, i32 1
  store i32 %87, i32* %arrayidx102, align 4
  %arraydecay103 = getelementptr inbounds [2 x i32], [2 x i32]* %ti, i32 0, i32 0
  call void @BF_encrypt(i32* %arraydecay103, i32 1)
  %88 = load i8*, i8** %ivec.addr, align 4
  store i8* %88, i8** %iv, align 4
  %arrayidx104 = getelementptr inbounds [2 x i32], [2 x i32]* %ti, i32 0, i32 0
  %89 = load i32, i32* %arrayidx104, align 4
  store i32 %89, i32* %t, align 4
  %90 = load i32, i32* %t, align 4
  %shr105 = lshr i32 %90, 24
  %and106 = and i32 %shr105, 255
  %conv107 = trunc i32 %and106 to i8
  %91 = load i8*, i8** %iv, align 4
  %incdec.ptr108 = getelementptr inbounds i8, i8* %91, i32 1
  store i8* %incdec.ptr108, i8** %iv, align 4
  store i8 %conv107, i8* %91, align 1
  %92 = load i32, i32* %t, align 4
  %shr109 = lshr i32 %92, 16
  %and110 = and i32 %shr109, 255
  %conv111 = trunc i32 %and110 to i8
  %93 = load i8*, i8** %iv, align 4
  %incdec.ptr112 = getelementptr inbounds i8, i8* %93, i32 1
  store i8* %incdec.ptr112, i8** %iv, align 4
  store i8 %conv111, i8* %93, align 1
  %94 = load i32, i32* %t, align 4
  %shr113 = lshr i32 %94, 8
  %and114 = and i32 %shr113, 255
  %conv115 = trunc i32 %and114 to i8
  %95 = load i8*, i8** %iv, align 4
  %incdec.ptr116 = getelementptr inbounds i8, i8* %95, i32 1
  store i8* %incdec.ptr116, i8** %iv, align 4
  store i8 %conv115, i8* %95, align 1
  %96 = load i32, i32* %t, align 4
  %and117 = and i32 %96, 255
  %conv118 = trunc i32 %and117 to i8
  %97 = load i8*, i8** %iv, align 4
  %incdec.ptr119 = getelementptr inbounds i8, i8* %97, i32 1
  store i8* %incdec.ptr119, i8** %iv, align 4
  store i8 %conv118, i8* %97, align 1
  %arrayidx120 = getelementptr inbounds [2 x i32], [2 x i32]* %ti, i32 0, i32 1
  %98 = load i32, i32* %arrayidx120, align 4
  store i32 %98, i32* %t, align 4
  %99 = load i32, i32* %t, align 4
  %shr121 = lshr i32 %99, 24
  %and122 = and i32 %shr121, 255
  %conv123 = trunc i32 %and122 to i8
  %100 = load i8*, i8** %iv, align 4
  %incdec.ptr124 = getelementptr inbounds i8, i8* %100, i32 1
  store i8* %incdec.ptr124, i8** %iv, align 4
  store i8 %conv123, i8* %100, align 1
  %101 = load i32, i32* %t, align 4
  %shr125 = lshr i32 %101, 16
  %and126 = and i32 %shr125, 255
  %conv127 = trunc i32 %and126 to i8
  %102 = load i8*, i8** %iv, align 4
  %incdec.ptr128 = getelementptr inbounds i8, i8* %102, i32 1
  store i8* %incdec.ptr128, i8** %iv, align 4
  store i8 %conv127, i8* %102, align 1
  %103 = load i32, i32* %t, align 4
  %shr129 = lshr i32 %103, 8
  %and130 = and i32 %shr129, 255
  %conv131 = trunc i32 %and130 to i8
  %104 = load i8*, i8** %iv, align 4
  %incdec.ptr132 = getelementptr inbounds i8, i8* %104, i32 1
  store i8* %incdec.ptr132, i8** %iv, align 4
  store i8 %conv131, i8* %104, align 1
  %105 = load i32, i32* %t, align 4
  %and133 = and i32 %105, 255
  %conv134 = trunc i32 %and133 to i8
  %106 = load i8*, i8** %iv, align 4
  %incdec.ptr135 = getelementptr inbounds i8, i8* %106, i32 1
  store i8* %incdec.ptr135, i8** %iv, align 4
  store i8 %conv134, i8* %106, align 1
  %107 = load i8*, i8** %ivec.addr, align 4
  store i8* %107, i8** %iv, align 4
  br label %if.end136

if.end136:                                        ; preds = %if.then72, %while.body69
  %108 = load i8*, i8** %in.addr, align 4
  %incdec.ptr137 = getelementptr inbounds i8, i8* %108, i32 1
  store i8* %incdec.ptr137, i8** %in.addr, align 4
  %109 = load i8, i8* %108, align 1
  store i8 %109, i8* %cc, align 1
  %110 = load i8*, i8** %iv, align 4
  %111 = load i32, i32* %n, align 4
  %arrayidx138 = getelementptr inbounds i8, i8* %110, i32 %111
  %112 = load i8, i8* %arrayidx138, align 1
  store i8 %112, i8* %c, align 1
  %113 = load i8, i8* %cc, align 1
  %114 = load i8*, i8** %iv, align 4
  %115 = load i32, i32* %n, align 4
  %arrayidx139 = getelementptr inbounds i8, i8* %114, i32 %115
  store i8 %113, i8* %arrayidx139, align 1
  %116 = load i8, i8* %c, align 1
  %conv140 = zext i8 %116 to i32
  %117 = load i8, i8* %cc, align 1
  %conv141 = zext i8 %117 to i32
  %xor142 = xor i32 %conv140, %conv141
  %conv143 = trunc i32 %xor142 to i8
  %118 = load i8*, i8** %out.addr, align 4
  %incdec.ptr144 = getelementptr inbounds i8, i8* %118, i32 1
  store i8* %incdec.ptr144, i8** %out.addr, align 4
  store i8 %conv143, i8* %118, align 1
  %119 = load i32, i32* %n, align 4
  %add145 = add nsw i32 %119, 1
  %and146 = and i32 %add145, 7
  store i32 %and146, i32* %n, align 4
  br label %while.cond66

while.end147:                                     ; preds = %while.cond66
  br label %if.end148

if.end148:                                        ; preds = %while.end147, %while.end
  store i8 0, i8* %cc, align 1
  store i8 0, i8* %c, align 1
  store i32 0, i32* %t, align 4
  %arrayidx149 = getelementptr inbounds [2 x i32], [2 x i32]* %ti, i32 0, i32 1
  store i32 0, i32* %arrayidx149, align 4
  %arrayidx150 = getelementptr inbounds [2 x i32], [2 x i32]* %ti, i32 0, i32 0
  store i32 0, i32* %arrayidx150, align 4
  store i32 0, i32* %v1, align 4
  store i32 0, i32* %v0, align 4
  %120 = load i32, i32* %n, align 4
  %121 = load i32*, i32** %num.addr, align 4
  store i32 %120, i32* %121, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp
define i32 @blowfish_main() #0 {
entry:
  %ukey = alloca [8 x i8], align 1
  %indata = alloca [40 x i8], align 1
  %outdata = alloca [40 x i8], align 1
  %ivec = alloca [8 x i8], align 1
  %num = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %l = alloca i32, align 4
  %encordec = alloca i32, align 4
  %check = alloca i32, align 4
  store i32 0, i32* %num, align 4
  store i32 0, i32* %k, align 4
  store i32 0, i32* %l, align 4
  store i32 1, i32* %encordec, align 4
  store i32 0, i32* %check, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %0, 8
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds [8 x i8], [8 x i8]* %ukey, i32 0, i32 %1
  store i8 0, i8* %arrayidx, align 1
  %2 = load i32, i32* %i, align 4
  %arrayidx1 = getelementptr inbounds [8 x i8], [8 x i8]* %ivec, i32 0, i32 %2
  store i8 0, i8* %arrayidx1, align 1
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %3 = load i32, i32* %i, align 4
  %inc = add nsw i32 %3, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %ukey, i32 0, i32 0
  call void @BF_set_key(i32 8, i8* %arraydecay)
  store i32 0, i32* %i, align 4
  br label %while.cond

while.cond:                                       ; preds = %for.end25, %for.end
  %4 = load i32, i32* %k, align 4
  %cmp2 = icmp slt i32 %4, 5200
  br i1 %cmp2, label %while.body, label %while.end26

while.body:                                       ; preds = %while.cond
  br label %while.cond3

while.cond3:                                      ; preds = %while.body6, %while.body
  %5 = load i32, i32* %k, align 4
  %cmp4 = icmp slt i32 %5, 5200
  br i1 %cmp4, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond3
  %6 = load i32, i32* %i, align 4
  %cmp5 = icmp slt i32 %6, 40
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond3
  %7 = phi i1 [ false, %while.cond3 ], [ %cmp5, %land.rhs ]
  br i1 %7, label %while.body6, label %while.end

while.body6:                                      ; preds = %land.end
  %8 = load i32, i32* %k, align 4
  %inc7 = add nsw i32 %8, 1
  store i32 %inc7, i32* %k, align 4
  %arrayidx8 = getelementptr inbounds [5200 x i8], [5200 x i8]* @in_key, i32 0, i32 %8
  %9 = load i8, i8* %arrayidx8, align 1
  %10 = load i32, i32* %i, align 4
  %inc9 = add nsw i32 %10, 1
  store i32 %inc9, i32* %i, align 4
  %arrayidx10 = getelementptr inbounds [40 x i8], [40 x i8]* %indata, i32 0, i32 %10
  store i8 %9, i8* %arrayidx10, align 1
  br label %while.cond3

while.end:                                        ; preds = %land.end
  %arraydecay11 = getelementptr inbounds [40 x i8], [40 x i8]* %indata, i32 0, i32 0
  %arraydecay12 = getelementptr inbounds [40 x i8], [40 x i8]* %outdata, i32 0, i32 0
  %11 = load i32, i32* %i, align 4
  %arraydecay13 = getelementptr inbounds [8 x i8], [8 x i8]* %ivec, i32 0, i32 0
  %12 = load i32, i32* %encordec, align 4
  call void @BF_cfb64_encrypt(i8* %arraydecay11, i8* %arraydecay12, i32 %11, i8* %arraydecay13, i32* %num, i32 %12)
  store i32 0, i32* %j, align 4
  br label %for.cond14

for.cond14:                                       ; preds = %for.inc23, %while.end
  %13 = load i32, i32* %j, align 4
  %14 = load i32, i32* %i, align 4
  %cmp15 = icmp slt i32 %13, %14
  br i1 %cmp15, label %for.body16, label %for.end25

for.body16:                                       ; preds = %for.cond14
  %15 = load i32, i32* %j, align 4
  %arrayidx17 = getelementptr inbounds [40 x i8], [40 x i8]* %outdata, i32 0, i32 %15
  %16 = load i8, i8* %arrayidx17, align 1
  %conv = zext i8 %16 to i32
  %17 = load i32, i32* %l, align 4
  %inc18 = add nsw i32 %17, 1
  store i32 %inc18, i32* %l, align 4
  %arrayidx19 = getelementptr inbounds [5200 x i8], [5200 x i8]* @out_key, i32 0, i32 %17
  %18 = load i8, i8* %arrayidx19, align 1
  %conv20 = zext i8 %18 to i32
  %cmp21 = icmp ne i32 %conv, %conv20
  %conv22 = zext i1 %cmp21 to i32
  %19 = load i32, i32* %check, align 4
  %add = add nsw i32 %19, %conv22
  store i32 %add, i32* %check, align 4
  br label %for.inc23

for.inc23:                                        ; preds = %for.body16
  %20 = load i32, i32* %j, align 4
  %inc24 = add nsw i32 %20, 1
  store i32 %inc24, i32* %j, align 4
  br label %for.cond14

for.end25:                                        ; preds = %for.cond14
  store i32 0, i32* %i, align 4
  br label %while.cond

while.end26:                                      ; preds = %while.cond
  %21 = load i32, i32* %check, align 4
  ret i32 %21
}

; Function Attrs: noinline nounwind ssp
define i32 @main() #0 {
entry:
  %retval = alloca i32, align 4
  %main_result = alloca i32, align 4
  store i32 0, i32* %retval, align 4
  store i32 0, i32* %main_result, align 4
  %call = call i32 @blowfish_main()
  store i32 %call, i32* %main_result, align 4
  %0 = load i32, i32* %main_result, align 4
  %call1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %0)
  %1 = load i32, i32* %main_result, align 4
  ret i32 %1
}

declare i32 @printf(i8*, ...) #1

attributes #0 = { noinline nounwind ssp "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+fxsr,+mmx,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+fxsr,+mmx,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"PIC Level", i32 2}
!1 = !{!"clang version 4.0.0 (tags/RELEASE_400/final)"}
